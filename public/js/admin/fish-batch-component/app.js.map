{"version":3,"sources":["webpack:///./resources/js/admin/fish-batch-component/fish-batch-biometry-form.js","webpack:///./resources/js/admin/fish-batch-component/fish-batch-component.js","webpack:///./resources/js/admin/fish-batch-component/fish-batch-death-form.js","webpack:///./resources/js/admin/fish-batch-component/fish-batch-expense-form.js","webpack:///./resources/js/admin/fish-batch-component/fish-batch-form.js","webpack:///./resources/js/admin/fish-batch-component/fish-batch-observation-form.js","webpack:///./resources/js/admin/input.js","webpack:///./node_modules/dayjs/dayjs.min.js","webpack:///./node_modules/dayjs/locale/es-do.js","webpack:///./node_modules/dayjs/plugin/isSameOrAfter.js","webpack:///./node_modules/dayjs/plugin/isSameOrBefore.js","webpack:///./node_modules/dayjs/plugin/relativeTime.js","webpack:///./node_modules/lodash/lodash.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/node module decorator","webpack:///./resources/js/admin/fish-batch-component/app.js"],"names":["dayjs","require","isSameOrBefore","extend","isSameOrAfter","window","fishBatchBiometryForm","visible","mode","fishBatch","originalBiometry","inThisMoment","date","setTime","time","measurements","samplePercentage","fishWeight","fishLong","resume","population","sampleSize","totalWeight","averageWeight","totalLong","averageLong","reset","this","setSampleSize","sample","isNumber","addWeight","value","addLong","waiting","wire","dispatch","refs","init","__createInputs","input","id","name","label","required","max","min","format","placeholder","step","enableForm","detail","seedtime","data","forEach","item","push","updateStatisticts","cancel","notifyErrors","errors","key","Object","hasOwnProperty","call","error","setError","addMeasuring","validateMeasuring","weight","long","removeMeasuring","index","length","splice","measuring","submit","validateSubmit","__store","__update","getSubmitData","storeBiometry","then","res","ok","info","biometry","console","log","updateBiometry","fishBatchId","fullDate","biometryId","validateDate","startOf","errorMessage","isEmpty","isOk","validateTime","hasError","weightMin","weightMax","weightMessage","longMin","longMax","validations","some","val","fishBatchComponent","fishpond","observations","expenses","biometries","deaths","tab","initialPopulationWarning","populationWarning","mountFishBatch","deathReports","capacity","initialPopulation","formName","updateObservation","observation","destroyObservation","Swal","fire","title","text","icon","showCancelButton","cancelButtonColor","confirmButtonColor","confirmButtonText","showLoaderOnConfirm","preConfirm","allowOutsideClick","isLoadig","result","isConfirmed","notFound","findIndex","updateExpense","expense","destroyExpense","updateDeathReport","report","destroyDeathReport","destroyBiometry","refresh","fishBatchDeathForm","originalDeath","mortality","__printSubmitData","header","bodyLength","left","right","repeat","keyLength","line","first","slice","last","updateMortality","round","storeDeathReport","death","deathId","validateDeaths","message","fishBatchExpenseForm","originalExpense","description","amount","formatCurrency","formatAmount","deleteCurrencyFormat","storeExpense","expenseId","validateDescription","trim","validateAmount","fishBatchForm","allFishponds","fishponds","fishpondId","biomass","unitCost","__buildFishponds","initialData","record","inUse","filter","f","x","fishBatchAmount","find","setTimeout","initialWeight","updateBiomass","updateUnitCost","storeFishBatch","fishpondInUse","updateFishBatch","validateFishpond","dateSelected","isValid","now","dateValue","validatePopulation","validateAverageWeight","target","fishBatchObservationForm","originalObservation","storeObservation","observationId","validateTitle","validateMessage","config","type","default","disabled","module","exports","t","e","n","r","i","s","u","a","o","h","c","d","$","l","y","M","weekdays","split","months","m","String","Array","join","g","z","utcOffset","Math","abs","floor","year","month","clone","add","ceil","p","w","D","ms","Q","toLowerCase","replace","v","_","S","args","arguments","O","locale","$L","utc","$u","$x","$offset","parse","prototype","$d","Date","NaN","test","match","substring","UTC","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","toString","isSame","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","toDate","apply","$locale","weekStart","$set","daysInMonth","get","Number","subtract","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","diff","toJSON","toISOString","toUTCString","b","$i","isDayjs","en","Ls","relativeTime","future","past","yy","ordinal","formats","LT","LTS","L","LL","LLL","LLLL","fromToBase","thresholds","rounding","to","from","toNow","fromNow","undefined","FUNC_ERROR_TEXT","HASH_UNDEFINED","PLACEHOLDER","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","INFINITY","MAX_SAFE_INTEGER","NAN","MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","boolTag","dateTag","errorTag","funcTag","genTag","mapTag","numberTag","objectTag","promiseTag","regexpTag","setTag","stringTag","symbolTag","weakMapTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","RegExp","source","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","rePropName","reRegExpChar","reHasRegExpChar","reTrimStart","reWhitespace","reWrapComment","reWrapDetails","reSplitDetails","reAsciiWord","reForbiddenIdentifierChars","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsComboRange","rsComboMarksRange","rsDingbatRange","rsLowerRange","rsUpperRange","rsVarRange","rsBreakRange","rsMathOpRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","reUnicode","reUnicodeWord","reHasUnicode","reHasUnicodeWord","contextProps","templateCounter","typedArrayTags","cloneableTags","stringEscapes","freeParseFloat","parseFloat","freeParseInt","parseInt","freeGlobal","freeSelf","self","root","Function","freeExports","nodeType","freeModule","moduleExports","freeProcess","process","nodeUtil","types","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","func","thisArg","arrayAggregator","array","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","comparator","arrayMap","arrayPush","values","offset","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiSize","baseProperty","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","object","basePropertyOf","baseReduce","current","baseTimes","baseTrim","string","trimmedEndIndex","baseUnary","baseValues","props","cacheHas","cache","has","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","deburrLetter","escapeHtmlChar","escapeStringChar","chr","hasUnicode","mapToArray","map","size","overArg","transform","arg","replaceHolders","setToArray","setToPairs","stringSize","lastIndex","unicodeSize","stringToArray","unicodeToArray","asciiToArray","charAt","unescapeHtmlChar","runInContext","context","uid","defaults","pick","Error","TypeError","arrayProto","funcProto","objectProto","coreJsData","funcToString","idCounter","maskSrcKey","exec","keys","IE_PROTO","nativeObjectToString","objectCtorString","oldDash","reIsNative","Buffer","Symbol","Uint8Array","allocUnsafe","getPrototype","getPrototypeOf","objectCreate","create","propertyIsEnumerable","spreadableSymbol","isConcatSpreadable","symIterator","iterator","symToStringTag","toStringTag","defineProperty","getNative","ctxClearTimeout","clearTimeout","ctxNow","ctxSetTimeout","nativeCeil","nativeFloor","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","isBuffer","nativeIsFinite","isFinite","nativeJoin","nativeKeys","nativeMax","nativeMin","nativeNow","nativeParseInt","nativeRandom","random","nativeReverse","reverse","DataView","Map","Promise","Set","WeakMap","nativeCreate","metaMap","realNames","dataViewCtorString","toSource","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","symbolValueOf","symbolToString","lodash","isObjectLike","isArray","LazyWrapper","LodashWrapper","wrapperClone","baseCreate","proto","isObject","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","Hash","entries","clear","entry","ListCache","MapCache","SetCache","__data__","Stack","arrayLikeKeys","inherited","isArr","isArg","isArguments","isBuff","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","copyArray","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","assocIndexOf","baseAggregator","baseEach","baseAssign","copyObject","baseAt","paths","skip","number","lower","upper","baseClone","bitmask","customizer","stack","isDeep","isFlat","isFull","constructor","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","getSymbolsIn","copySymbolsIn","keysIn","baseAssignIn","getSymbols","copySymbols","Ctor","cloneArrayBuffer","dataView","buffer","byteOffset","byteLength","cloneDataView","cloneTypedArray","regexp","cloneRegExp","symbol","initCloneByTag","stacked","subValue","getAllKeysIn","getAllKeys","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","outer","computed","valuesIndex","templateSettings","pop","getMapData","pairs","LARGE_ARRAY_SIZE","createBaseEach","baseForOwn","baseEachRight","baseForOwnRight","baseEvery","baseExtremum","isSymbol","baseFilter","baseFlatten","depth","isStrict","isFlattenable","baseFor","createBaseFor","baseForRight","baseFunctions","isFunction","baseGet","path","castPath","toKey","baseGetAllKeys","keysFunc","symbolsFunc","baseGetTag","isOwn","unmasked","getRawTag","objectToString","baseGt","other","baseHas","baseHasIn","baseIntersection","arrays","othLength","othIndex","caches","maxLength","Infinity","seen","baseInvoke","parent","baseIsArguments","baseIsEqual","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","convert","isPartial","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","othStacked","skipCtor","othValue","compared","objCtor","othCtor","equalObjects","baseIsEqualDeep","baseIsMatch","matchData","noCustomizer","srcValue","COMPARE_PARTIAL_FLAG","baseIsNative","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","mergeFunc","safeGet","newValue","isTyped","isArrayLikeObject","isPlainObject","toPlainObject","baseMergeDeep","baseNth","baseOrderBy","iteratees","orders","getIteratee","comparer","sort","baseSortBy","objCriteria","criteria","othCriteria","ordersLength","compareAscending","compareMultiple","basePickBy","baseSet","basePullAll","indexOf","basePullAt","indexes","previous","baseUnset","baseRepeat","baseRest","start","setToString","overRest","baseSample","baseSampleSize","nested","baseSetData","baseSetToString","constant","baseShuffle","baseSlice","end","baseSome","baseSortedIndex","retHighest","low","high","mid","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","baseWrapperValue","actions","action","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castRest","castSlice","copy","arrayBuffer","typedArray","valIsDefined","valIsReflexive","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","iterable","createCaseFirst","methodName","trailing","createCompounder","callback","words","deburr","createCtor","thisBinding","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","wrapper","getFuncName","funcName","getData","isLaziable","plant","createHybrid","partialsRight","holdersRight","argPos","ary","arity","isAry","isBind","isBindKey","isFlip","getHolder","holdersCount","newHolders","createRecurry","fn","reorder","createInverter","toIteratee","baseInverter","createMathOperation","operator","defaultValue","createOver","arrayFunc","createPadding","chars","charsLength","createRange","toFinite","baseRange","createRelationalOperation","toNumber","wrapFunc","isCurry","newData","setData","setWrapToString","createRound","precision","toInteger","pair","noop","createToPairs","baseToPairs","createWrap","srcBitmask","newBitmask","isCombo","mergeData","createCurry","createPartial","createBind","customDefaultsAssignIn","customDefaultsMerge","customOmitClone","arrLength","arrStacked","arrValue","flatten","otherFunc","getValue","stubArray","hasPath","hasFunc","isLength","ArrayBuffer","resolve","ctorString","isMaskable","stubFalse","otherArgs","oldArray","shortOut","reference","details","insertWrapDetails","updateWrapDetails","getWrapDetails","count","lastCalled","stamp","remaining","rand","memoize","memoizeCapped","charCodeAt","quote","subString","difference","differenceBy","differenceWith","findLastIndex","head","intersection","mapped","intersectionBy","intersectionWith","pull","pullAll","pullAt","union","unionBy","unionWith","unzip","group","unzipWith","without","xor","xorBy","xorWith","zip","zipWith","chain","interceptor","wrapperAt","countBy","findLast","forEachRight","groupBy","invokeMap","keyBy","partition","sortBy","before","bind","bindKey","WRAP_BIND_FLAG","debounce","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","invokeFunc","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","flush","defer","delay","resolver","memoized","Cache","negate","overArgs","transforms","funcsLength","partial","partialRight","rearg","gt","gte","isError","isInteger","isString","lt","lte","toArray","next","done","iteratorToArray","remainder","toLength","isBinary","assign","assignIn","assignInWith","assignWith","at","propsIndex","propsLength","defaultsDeep","mergeWith","invert","invertBy","invoke","merge","omit","CLONE_DEEP_FLAG","basePick","pickBy","prop","toPairs","toPairsIn","camelCase","word","capitalize","upperFirst","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","toUpperCase","pattern","hasUnicodeWord","unicodeWords","asciiWords","attempt","bindAll","methodNames","flow","flowRight","method","methodOf","mixin","over","overEvery","overSome","basePropertyDeep","range","rangeRight","augend","addend","divide","dividend","divisor","multiply","multiplier","multiplicand","minuend","subtrahend","after","castArray","chunk","compact","concat","cond","conforms","baseConforms","properties","curry","curryRight","drop","dropRight","dropRightWhile","dropWhile","fill","baseFill","flatMap","flatMapDeep","flatMapDepth","flattenDeep","flattenDepth","flip","fromPairs","functions","functionsIn","initial","mapKeys","mapValues","matches","matchesProperty","nthArg","omitBy","once","orderBy","propertyOf","pullAllBy","pullAllWith","reject","remove","rest","setWith","shuffle","sortedUniq","sortedUniqBy","separator","limit","spread","tail","take","takeRight","takeRightWhile","takeWhile","tap","throttle","toPath","isArrLike","unary","uniq","uniqBy","uniqWith","unset","update","updateWith","valuesIn","wrap","zipObject","zipObjectDeep","entriesIn","extendWith","clamp","cloneDeep","cloneDeepWith","cloneWith","conformsTo","defaultTo","endsWith","position","escape","escapeRegExp","every","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","inRange","baseInRange","isBoolean","isElement","isEqual","isEqualWith","isMatch","isMatchWith","isNaN","isNative","isNil","isNull","isSafeInteger","isUndefined","isWeakMap","isWeakSet","lastIndexOf","strictLastIndexOf","maxBy","mean","meanBy","minBy","stubObject","stubString","stubTrue","nth","noConflict","pad","strLength","padEnd","padStart","radix","floating","temp","reduce","reduceRight","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","startsWith","sum","sumBy","template","settings","isEscaping","isEvaluating","imports","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","times","toLower","toSafeInteger","toUpper","trimEnd","trimStart","truncate","omission","search","global","newEnd","unescape","uniqueId","prefix","each","eachRight","VERSION","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","dir","isRight","view","getView","iterLength","takeCount","iterIndex","commit","wrapped","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","loaded","__webpack_modules__","getter","__esModule","definition","enumerable","globalThis","obj","nmd","children","sortByDate","item1","item2","app","home","allFishBatchs","fishBatchs","formActive","createFishpond","createFishBatch","updateFishBatchList","changeTab","harvest","selectFishBatch","createdAt","updatedAt","expenseAmount","totalAmount","unitPrice","price","initialBiomass","totalDeaths","createObservation","createExpense","createBiometry","createDeathReport","seed","__updateAllParameters","rectangular","circular","area","width","diameter","PI","pow","effectiveHeight","maxHeight","height","volume","densityByArea","desityByVolume","densityByVolume","createIsSameUpdate","globalMortality","setPopulation","unit","addNewFishBatch","fishBatchUpdated","lastFishBatch","addObservation","batch","original","addExpense","__updateMonetaryParameters","removeExpense","addDeathReport","removeDeathReport","addBiometry","removeBiometry","initialCost","__updateBiomassParameters","__updateBiometriesAndDeaths","indexBiometry","emitEvent"],"mappings":"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","file":"/js/admin/fish-batch-component/app.js","sourcesContent":["import { isEmpty, isNumber } from 'lodash';\r\nimport input from '../input';\r\nconst dayjs = require('dayjs');\r\nvar isSameOrBefore = require('dayjs/plugin/isSameOrBefore');\r\ndayjs.extend(isSameOrBefore);\r\n\r\nvar isSameOrAfter = require('dayjs/plugin/isSameOrAfter');\r\ndayjs.extend(isSameOrAfter);\r\n\r\nwindow.fishBatchBiometryForm = () => {\r\n  return {\r\n    /** Define si el formulario se muestra o no */\r\n    visible: false,\r\n    /** \r\n     * Establece el tipo de formulario, \r\n     * si register para nuevo costo o \r\n     * updating para actualizar uno existente \r\n     * */\r\n    mode: 'register',\r\n    /**\r\n     * Instnacia del lote de peces en el que se desea \r\n     * crear o actualizar un costo.\r\n     */\r\n    fishBatch: null,\r\n    /** Instancia original de la biometría a modificar */\r\n    originalBiometry: null,\r\n    // *===========================================*\r\n    // *========== Campos del formulario ==========*\r\n    // *===========================================*\r\n    /** Establece el momento en el que se registra el gasto */\r\n    inThisMoment: true,\r\n    /** Fecha del gasto en formato YYYY-MM-DD */\r\n    date: null,\r\n    /** Habilita el ingreso manual de la hora */\r\n    setTime: false,\r\n    /** Hora en la que se registra el gasto */\r\n    time: null,\r\n    /** Listado con las mediciones a guardar */\r\n    measurements: [],\r\n    samplePercentage: 0,\r\n    /** Peso del pez */\r\n    fishWeight: null,\r\n    /** logitud del pez */\r\n    fishLong: null,\r\n    resume: {\r\n      population: 0,\r\n      sampleSize: 0,\r\n      totalWeight: 0,\r\n      averageWeight: 0,\r\n      totalLong: 0,\r\n      averageLong: 0,\r\n      samplePercentage: 0,\r\n      reset() {\r\n        this.sampleSize = 0;\r\n        this.totalWeight = 0;\r\n        this.averageWeight = 0;\r\n        this.totalLong = 0;\r\n        this.averageLong = 0;\r\n        this.samplePercentage = 0;\r\n      },\r\n      setSampleSize(population, sample) {\r\n        this.population = population,\r\n          this.sampleSize = sample;\r\n        if (isNumber(population) && isNumber(sample) && population > 0 && population >= sample) {\r\n          this.samplePercentage = (sample / population) * 100;\r\n        }\r\n      },\r\n      addWeight(value) {\r\n        this.totalWeight += value;\r\n        this.averageWeight = this.sampleSize ? this.totalWeight / this.sampleSize : 0;\r\n      },\r\n      addLong(value) {\r\n        this.totalLong += value;\r\n        this.averageLong = this.sampleSize ? this.totalLong / this.sampleSize : 0;\r\n      }\r\n    },\r\n    // *====================================================*\r\n    // *========== Relacionadas con el componente ==========*\r\n    // *====================================================*\r\n    /** Define si el componente está esperando una respuesta del servidor */\r\n    waiting: false,\r\n    /** Se encarga de las peticones al servidor */\r\n    wire: null,\r\n    /** Se encarga de administrar los eventos personalizados */\r\n    dispatch: null,\r\n    /** Permite acceder a las referencias del componente en el DOM */\r\n    refs: null,\r\n    // *=====================================================*\r\n    // *============= METODOS DE INICIALIZACIÓN =============*\r\n    // *=====================================================*\r\n    init(wire = null, dispatch = null, refs = null) {\r\n      this.wire = wire;\r\n      this.dispatch = dispatch;\r\n      this.refs = refs;\r\n      this.__createInputs();\r\n    },\r\n    __createInputs() {\r\n      //FECHA\r\n      this.date = input({\r\n        id: 'biometryDate',\r\n        name: 'date',\r\n        label: 'Selecciona una fecha',\r\n        required: true,\r\n        max: dayjs(),\r\n        min: dayjs(),\r\n      });\r\n\r\n      //HORA\r\n      this.time = input({\r\n        id: 'biometryTime',\r\n        name: 'time',\r\n        label: 'Hora',\r\n        required: true,\r\n        value: dayjs().format('HH:mm')\r\n      });\r\n\r\n      //WEIGHT\r\n      this.fishWeight = input({\r\n        id: 'biometryWeight',\r\n        name: 'weight',\r\n        label: 'Peso [g]',\r\n        placeholder: 'Peso en gramos.',\r\n        min: 0,\r\n        max: 1000,\r\n        step: 0.1\r\n      });\r\n\r\n      //LONG\r\n      this.fishLong = input({\r\n        id: 'biometryLong',\r\n        name: 'long',\r\n        label: 'Logitud [cm]',\r\n        placeholder: 'Largo en cm.',\r\n        min: 0,\r\n        max: 100,\r\n        step: 0.1\r\n      });\r\n    },\r\n    // *=====================================================*\r\n    // *================ METODOS DE UTILIDAD ================*\r\n    // *=====================================================*\r\n    reset() {\r\n      this.visible = false;\r\n      this.mode = \"register\";\r\n      this.fishBatch = null;\r\n      this.waiting = false;\r\n      //Se rresetean los formulario\r\n      this.inThisMoment = true;\r\n      this.setTime = false;\r\n      this.fishWeight.reset();\r\n      this.fishLong.reset();\r\n      this.resume.reset();\r\n      this.measurements = [];\r\n    },\r\n    /**\r\n     * Este metodo establece los parametros basicos con lo que\r\n     * se inicializa el formulario cuando es llamado por un evento global.\r\n     * @param {*} detail Detalles del modo en el que se habilita el formulario\r\n     */\r\n    enableForm(detail) {\r\n      this.visible = true;\r\n      this.mode = detail.mode;\r\n      this.fishBatch = detail.fishBatch;\r\n      this.date.min = dayjs(this.fishBatch.seedtime);\r\n\r\n      if (detail.mode === 'updating') {\r\n        this.originalBiometry = detail.data;\r\n        this.originalBiometry.measurements.forEach(item => {\r\n          this.measurements.push(item);\r\n        });\r\n\r\n        this.inThisMoment = false;\r\n        this.date.value = detail.data.date.format('YYYY-MM-DD');\r\n        this.setTime = true;\r\n        this.time.value = detail.data.date.format('HH:mm');\r\n\r\n        this.updateStatisticts();\r\n        //TODO: algoritmo para montar los datos al componente\r\n      }\r\n    },\r\n    cancel() {\r\n      this.reset();\r\n      this.dispatch('cancel-form-operation');\r\n    },\r\n    notifyErrors(errors) {\r\n      //Esto se encarga de actualizar los campos del formulario\r\n      for (const key in errors) {\r\n        if (Object.hasOwnProperty.call(errors, key)) {\r\n          const error = errors[key];\r\n          if (Object.hasOwnProperty.call(this, key)) {\r\n            this[key].setError(error);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    addMeasuring() {\r\n      if (this.validateMeasuring()) {\r\n        this.measurements.push({\r\n          weight: this.fishWeight.value,\r\n          long: this.fishLong.value\r\n        });\r\n\r\n\r\n        this.fishWeight.reset();\r\n        this.fishLong.reset();\r\n        this.updateStatisticts();\r\n      }\r\n    },\r\n    /**\r\n     * Retira la medición del arreglo de mediciones\r\n     * @param {*} index Ubicación a remover del listado\r\n     */\r\n    removeMeasuring(index) {\r\n      if (isNumber(index) && index >= 0 && index < this.measurements.length) {\r\n        this.measurements.splice(index, 1);\r\n        this.updateStatisticts();\r\n      }\r\n    },\r\n    updateStatisticts() {\r\n      this.resume.reset();\r\n      this.resume.setSampleSize(this.fishBatch.population, this.measurements.length);\r\n\r\n      this.measurements.forEach(measuring => {\r\n        this.resume.addWeight(measuring.weight);\r\n        if (isNumber(measuring.long)) {\r\n          this.resume.addLong(measuring.long);\r\n        }\r\n      });\r\n    },\r\n    // *======================================*\r\n    // *================ CRUD ================*\r\n    // *======================================*\r\n    submit() {\r\n      if (this.validateSubmit()) {\r\n        if (this.mode === 'register') {\r\n          this.__store();\r\n        } else if (this.mode === 'updating') {\r\n          this.__update();\r\n        }\r\n      }\r\n    },\r\n    __store() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.storeBiometry(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            let info = {\r\n              fishBatch: this.fishBatch,\r\n              biometry: res.biometry,\r\n            }\r\n            // Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('biometry-was-stored', info);\r\n            //Se resetea el formulario\r\n            this.reset();\r\n          } else {\r\n            console.log(res.errors);\r\n            this.notifyErrors(res.errors);\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    __update() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.updateBiometry(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            let info = {\r\n              fishBatch: this.fishBatch,\r\n              biometry: res.biometry,\r\n            }\r\n            // Se emite el evento\r\n            this.dispatch('biometry-was-updated', info);\r\n            //Se resetea el formulario\r\n            this.reset();\r\n          } else {\r\n            console.log(res.errors);\r\n            this.notifyErrors(res.errors);\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    getSubmitData() {\r\n      let date = this.date.value;\r\n      let time = this.time.value;\r\n      let data = {\r\n        fishBatchId: this.fishBatch.id,\r\n        inThisMoment: this.inThisMoment,\r\n        setTime: this.setTime,\r\n        measurements: this.measurements\r\n      };\r\n\r\n      if (!this.inThisMoment) {\r\n        data.date = date;\r\n        if (this.setTime) {\r\n          data.time = time;\r\n          data.fullDate = `${date} ${time}`;\r\n        }\r\n      }\r\n\r\n      if (this.mode === 'updating') {\r\n        data.biometryId = this.originalBiometry.id;\r\n      }\r\n\r\n      return data;\r\n    },\r\n    // *===============================================*\r\n    // *================ VALIDACIONES =================*\r\n    // *===============================================*\r\n    validateDate() {\r\n      let value = this.date.value;\r\n      let min = dayjs(this.date.min).startOf('day');\r\n      let max = dayjs();\r\n      let errorMessage = null;\r\n\r\n      if (!this.inThisMoment) {\r\n        if (!isEmpty(value)) {\r\n          let date = dayjs(value, 'YYYY-MM-DD').startOf('day');\r\n          if (date.isSameOrAfter(min)) {\r\n            if (date.isSameOrBefore(max)) {\r\n              this.date.isOk();\r\n              //Se valida la hora\r\n              if (this.setTime) {\r\n                this.validateTime();\r\n              }\r\n\r\n              return true;\r\n            } else {\r\n              errorMessage = \"No se pueden agregar gastos en el futuro.\";\r\n            }\r\n          } else {\r\n            errorMessage = \"La fecha debe ser mayor a la fecha del lote\";\r\n          }\r\n        } else {\r\n          errorMessage = \"Se debe elegir una fecha valida\";\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n\r\n      this.date.setError(errorMessage);\r\n      return false;\r\n    },\r\n    validateTime() {\r\n      let time = this.time.value;\r\n      let date = this.date.value;\r\n      let min = dayjs(this.fishBatch.seedtime);\r\n      let max = dayjs();\r\n      let errorMessage = null;\r\n\r\n      if (!this.inThisMoment && this.setTime && !this.date.hasError) {\r\n        if (!isEmpty(time)) {\r\n          let fullDate = dayjs(`${date} ${time}`, 'YYYY-MM-DD HH:mm');\r\n          if (fullDate.isSameOrAfter(min)) {\r\n            if (fullDate.isSameOrBefore(max)) {\r\n              this.time.isOk();\r\n              return true;\r\n            } else {\r\n              errorMessage = \"Los gastos no se pueden realizar en el futuro\";\r\n            }\r\n          } else {\r\n            errorMessage = \"Se intenta registrar un gasto anterior al lote.\";\r\n          }\r\n        } else {\r\n          errorMessage = \"Debe escribir o seleccionar una hora válida\";\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n\r\n      this.time.setError(errorMessage);\r\n      return false;\r\n    },\r\n    validateMeasuring() {\r\n      let weight = this.fishWeight.value;\r\n      let weightMin = this.fishWeight.min;\r\n      let weightMax = this.fishWeight.max;\r\n      let weightMessage = null;\r\n\r\n      let long = this.fishLong.value;\r\n      let longMin = this.fishLong.min;\r\n      let longMax = this.fishLong.max;\r\n\r\n      //Validación opcional del lago del pez\r\n      if (long || isNumber(long)) {\r\n        if (long > longMin) {\r\n          if (long < longMax) {\r\n            this.fishLong.isOk();\r\n          } else {\r\n            this.fishLong.setError(`Debe ser menor que ${longMax} cm.`);\r\n          }\r\n        } else {\r\n          this.fishLong.setError(`Debe ser mayor que ${longMin}`);\r\n        }\r\n      } else {\r\n        this.fishLong.isOk();\r\n      }\r\n\r\n      if (weight || isNumber(weight)) {\r\n        if (weight > weightMin) {\r\n          if (weight < weightMax) {\r\n            this.fishWeight.isOk();\r\n            return true;\r\n          } else {\r\n            weightMessage = `Debe ser menor que ${weightMax} g.`;\r\n          }\r\n        } else {\r\n          weightMessage = `Debe ser superior a ${weightMin} g.`;\r\n        }\r\n      } else {\r\n        weightMessage = 'Es obligatorio.';\r\n      }\r\n\r\n      this.fishWeight.setError(weightMessage);\r\n      return false;\r\n    },\r\n    /**\r\n     * Realiza todas las validaciones del formulario\r\n     * y returna true si todas fueron correctas.\r\n     * @returns bool\r\n     */\r\n    validateSubmit() {\r\n      let validations = [];\r\n      validations.push(this.validateDate());\r\n      validations.push(this.validateTime());\r\n      validations.push(this.measurements.length > 0);\r\n\r\n      //Retorna false si alguna de las validaciones es falsa, pero valida todos los campos\r\n      return !validations.some(val => val === false);\r\n    }\r\n  }\r\n}","\r\nwindow.fishBatchComponent = () => {\r\n  return {\r\n    fishBatch: null,\r\n    //Listados\r\n    fishpond: null,\r\n    observations: [],\r\n    expenses: [],\r\n    biometries: [],\r\n    deaths: [],\r\n    /** \r\n     * Controla que listado es el que se muestra en pantalla y \r\n     * tambien controla que formulario se habilita. [observations, expenses, biometries, deaths]\r\n     */\r\n    tab: 'info',\r\n    // *================================================*\r\n    // *============ PROPIEDADES DE LA VISTA ===========*\r\n    // *================================================*\r\n\r\n    initialPopulationWarning: false,\r\n    populationWarning: false,\r\n\r\n    /** Se encarga de las peticones al servidor */\r\n    wire: null,\r\n    /** Se encarga de administrar los eventos personalizados */\r\n    dispatch: null,\r\n    /** Permite acceder a las referencias del componente en el DOM */\r\n    refs: null,\r\n    // *===============================================*\r\n    // *============ Metodos del Componente ===========*\r\n    // *===============================================*\r\n    /**\r\n     * Se encarga de montar los datos iniciales\r\n     * @param {*} wire Objeto de livewire encargado de las peticiones\r\n     * @param {*} dispatch Onjeto de alpine encargado de los eventos\r\n     * @param {*} refs Objeto de alpine encargado de las referencias\r\n     */\r\n    init(wire = null, dispatch = null, refs = null) {\r\n      this.wire = wire;\r\n      this.dispatch = dispatch;\r\n      this.refs = refs;\r\n    },\r\n    mountFishBatch(fishBatch) {\r\n      this.tab = 'info';\r\n      this.fishBatch = fishBatch;\r\n      this.fishpond = fishBatch.fishpond;\r\n      this.observations = fishBatch.observations;\r\n      this.expenses = fishBatch.expenses;\r\n      this.deaths = fishBatch.deathReports;\r\n      this.biometries = fishBatch.biometries;\r\n\r\n      //Se establece la alerta de la población inicial\r\n      this.initialPopulationWarning = fishBatch.fishpond.capacity\r\n        ? fishBatch.initialPopulation > fishBatch.fishpond.capacity\r\n        : false;\r\n\r\n      //Se establece la alerta de la población\r\n      this.populationWarning = fishBatch.fishpond.capacity\r\n        ? fishBatch.population > fishBatch.fishpond.capacity\r\n        : false;\r\n    },\r\n    /**\r\n     * Se encarga de emiter el evento que habilita la aparicion del formulario\r\n     * en pantalla y este en funcíon de la pestaña que se está visualizando.\r\n     * @param {*} data Información adicional que se pasa al formulario\r\n     */\r\n    enableForm(data = null) {\r\n      let info = {\r\n        formName: null,\r\n        fishBatch: this.fishBatch,\r\n        data: data\r\n      }\r\n\r\n      if (this.tab === 'observations') {\r\n        info.formName = 'new-fish-batch-observation';\r\n      } else if (this.tab === 'expenses') {\r\n        info.formName = 'new-fish-batch-expense';\r\n      } else if (this.tab === 'deaths') {\r\n        info.formName = 'new-fish-batch-death';\r\n      } else if (this.tab === 'biometries') {\r\n        info.formName = 'new-fish-batch-biometry';\r\n      }\r\n\r\n      this.dispatch('enable-form', info);\r\n    },\r\n    updateObservation(observation) {\r\n      let formName = 'update-fish-batch-observation';\r\n      let fishBatch = this.fishBatch;\r\n      let data = observation;\r\n\r\n      this.dispatch('enable-form', { formName, fishBatch, data });\r\n    },\r\n    destroyObservation(observation) {\r\n      window.Swal.fire({\r\n        title: \"¿Desea eliminar esta observación?\",\r\n        text: \"Esta acción no puede revertirse.\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        cancelButtonColor: 'var(--primary)',\r\n        confirmButtonColor: 'var(--success)',\r\n        confirmButtonText: '¡Eliminar!',\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: () => {\r\n          return this.wire.destroyObservation(observation.id).then(res => res);\r\n        },\r\n        allowOutsideClick: () => !window.Swal.isLoadig()\r\n      }).then(result => {\r\n        if (result.isConfirmed) {\r\n          if (result.value.ok || result.value.errors.notFound) {\r\n            //Recupero el index de la observacion\r\n            let index = this.fishBatch.observations.findIndex(item => item.id === observation.id);\r\n            //Se elimina el estanque del arreglo\r\n            if (index >= 0) {\r\n              this.fishBatch.observations.splice(index, 1);\r\n              this.observations = this.fishBatch.observations;\r\n            }\r\n          }\r\n        }\r\n      });\r\n    },\r\n    updateExpense(expense) {\r\n      let formName = 'update-fish-batch-expense';\r\n      let fishBatch = this.fishBatch;\r\n      let data = expense;\r\n\r\n      this.dispatch('enable-form', { formName, fishBatch, data });\r\n    },\r\n    destroyExpense(expense) {\r\n      window.Swal.fire({\r\n        title: \"¿Desea eliminar este gasto?\",\r\n        text: \"Esta acción no puede revertirse.\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        cancelButtonColor: 'var(--primary)',\r\n        confirmButtonColor: 'var(--success)',\r\n        confirmButtonText: '¡Eliminar!',\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: () => {\r\n          return this.wire.destroyExpense(expense.id).then(res => res);\r\n        },\r\n        allowOutsideClick: () => !window.Swal.isLoadig()\r\n      }).then(result => {\r\n        if (result.isConfirmed) {\r\n          if (result.value.ok || result.value.errors.notFound) {\r\n            //Recupero el index de la observacion\r\n            let fishBatch = this.fishBatch;\r\n            this.dispatch('expense-was-deleted', { fishBatch, expense });\r\n          }\r\n        }\r\n      });\r\n    },\r\n    updateDeathReport(report) {\r\n      let formName = 'update-fish-batch-death';\r\n      let fishBatch = this.fishBatch;\r\n      let data = report;\r\n      this.dispatch('enable-form', { formName, fishBatch, data });\r\n    },\r\n    destroyDeathReport(report) {\r\n      window.Swal.fire({\r\n        title: \"¿Desea eliminar este reporte?\",\r\n        text: \"Esta acción no puede revertirse.\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        cancelButtonColor: 'var(--primary)',\r\n        confirmButtonColor: 'var(--success)',\r\n        confirmButtonText: '¡Eliminar!',\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: () => {\r\n          return this.wire.destroyDeathReport(report.id).then(res => res);\r\n        },\r\n        allowOutsideClick: () => !window.Swal.isLoadig()\r\n      }).then(result => {\r\n        if (result.isConfirmed) {\r\n          if (result.value.ok || result.value.errors.notFound) {\r\n            //Recupero el index de la observacion\r\n            let fishBatch = this.fishBatch;\r\n            this.dispatch('death-was-deleted', { fishBatch, report });\r\n          } else {\r\n            console.log(res.value.errors);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    updateBiometry(biometry) {\r\n      let formName = 'update-fish-batch-biometry';\r\n      let fishBatch = this.fishBatch;\r\n      let data = biometry;\r\n\r\n      this.dispatch('enable-form', { formName, fishBatch, data });\r\n    },\r\n    destroyBiometry(biometry) {\r\n      window.Swal.fire({\r\n        title: \"¿Desea eliminar este reporte?\",\r\n        text: \"Esta acción no puede revertirse.\",\r\n        icon: 'warning',\r\n        showCancelButton: true,\r\n        cancelButtonColor: 'var(--primary)',\r\n        confirmButtonColor: 'var(--success)',\r\n        confirmButtonText: '¡Eliminar!',\r\n        showLoaderOnConfirm: true,\r\n        preConfirm: () => {\r\n          return this.wire.destroyBiometry(biometry.id).then(res => res);\r\n        },\r\n        allowOutsideClick: () => !window.Swal.isLoadig()\r\n      }).then(result => {\r\n        if (result.isConfirmed) {\r\n          if (result.value.ok || result.value.errors.notFound) {\r\n            //Recupero el index de la observacion\r\n            let fishBatch = this.fishBatch;\r\n            console.log('Se emitío el evento para remover');\r\n            this.dispatch('biometry-was-deleted', { fishBatch, biometry });\r\n          } else {\r\n            console.log(res.value.errors);\r\n          }\r\n        }\r\n      });\r\n    },\r\n    refresh() {\r\n      this.observations = [];\r\n      this.fishBatch.observations.forEach(item => {\r\n        this.observations.push(item);\r\n      });\r\n\r\n      this.expenses = [];\r\n      this.fishBatch.expenses.forEach(item => {\r\n        this.expenses.push(item);\r\n      })\r\n\r\n      this.deaths = [];\r\n      this.fishBatch.deathReports.forEach(report => {\r\n        this.deaths.push(report);\r\n      })\r\n\r\n      this.biometries = [];\r\n      this.fishBatch.biometries.forEach(item => {\r\n        this.biometries.push(item);\r\n      })\r\n    }\r\n  }\r\n}","import { round } from 'lodash';\r\nimport input from '../input';\r\n\r\nwindow.fishBatchDeathForm = () => {\r\n  return {\r\n    /** Define si el formulario se muestra o no */\r\n    visible: false,\r\n    /** \r\n     * Establece el tipo de formulario, \r\n     * si register para nuevo costo o \r\n     * updating para actualizar uno existente \r\n     * */\r\n    mode: 'register',\r\n    /**\r\n     * Instnacia del lote de peces en el que se desea \r\n     * crear o actualizar un costo.\r\n     */\r\n    fishBatch: null,\r\n    /** Instancia a modicar de un registro de defunción */\r\n    originalDeath: null,\r\n    // *===========================================*\r\n    // *========== Campos del formulario ==========*\r\n    // *===========================================*\r\n    deaths: null,\r\n    mortality: null,\r\n    // *====================================================*\r\n    // *========== Relacionadas con el componente ==========*\r\n    // *====================================================*\r\n    /** Define si el componente está esperando una respuesta del servidor */\r\n    waiting: false,\r\n    /** Se encarga de las peticones al servidor */\r\n    wire: null,\r\n    /** Se encarga de administrar los eventos personalizados */\r\n    dispatch: null,\r\n    /** Permite acceder a las referencias del componente en el DOM */\r\n    refs: null,\r\n    // *=====================================================*\r\n    // *============= METODOS DE INICIALIZACIÓN =============*\r\n    // *=====================================================*\r\n    init(wire = null, dispatch = null, refs = null) {\r\n      this.wire = wire;\r\n      this.dispatch = dispatch;\r\n      this.refs = refs;\r\n      this.__createInputs();\r\n    },\r\n    __createInputs() {\r\n      //muertes\r\n      this.deaths = input({\r\n        id: 'fishBatchDeath',\r\n        name: 'deaths',\r\n        label: 'Peces muertos',\r\n        placeholder: 'Ingresa el numero de peces muertos.',\r\n        min: 1,\r\n        max: null,\r\n      });\r\n    },\r\n    // *=====================================================*\r\n    // *================ METODOS DE UTILIDAD ================*\r\n    // *=====================================================*\r\n    reset() {\r\n      this.visible = false;\r\n      this.mode = \"register\";\r\n      this.fishBatch = null;\r\n      this.waiting = false;\r\n      //Se rresetean los formulario\r\n      this.deaths.reset();\r\n      this.mortality = null;\r\n    },\r\n    /**\r\n     * Este metodo establece los parametros basicos con lo que\r\n     * se inicializa el formulario cuando es llamado por un evento global.\r\n     * @param {*} detail Detalles del modo en el que se habilita el formulario\r\n     */\r\n    enableForm(detail) {\r\n      this.visible = true;\r\n      this.mode = detail.mode;\r\n      this.fishBatch = detail.fishBatch;\r\n      this.deaths.max = detail.fishBatch.population;\r\n\r\n      if (detail.mode === 'updating') {\r\n        this.originalDeath = detail.data;\r\n        this.deaths.value = detail.data.deaths;\r\n      }\r\n    },\r\n    cancel() {\r\n      this.reset();\r\n      this.dispatch('cancel-form-operation');\r\n    },\r\n    notifyErrors(errors) {\r\n      //Esto se encarga de actualizar los campos del formulario\r\n      for (const key in errors) {\r\n        if (Object.hasOwnProperty.call(errors, key)) {\r\n          const error = errors[key];\r\n          if (Object.hasOwnProperty.call(this, key)) {\r\n            this[key].setError(error);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    __printSubmitData(data) {\r\n      let bodyLength = 60;\r\n      let separator = '-';\r\n      let header = '';\r\n      let left = `+${separator}`;\r\n      let right = `${separator}+`;\r\n      let text = '';\r\n\r\n      header = left + separator.repeat(bodyLength) + right + '\\n';\r\n      text = header;\r\n\r\n      for (const key in data) {\r\n        if (Object.hasOwnProperty.call(data, key)) {\r\n          let value = data[key] ? data[key] : 'null';\r\n          let keyLength = key.length;\r\n          let valueLength = value.length;\r\n          let line = `${key}: ${value}`;\r\n          if (line.length <= bodyLength) {\r\n            line += ' '.repeat(bodyLength - line.length);\r\n            text += `| ${line} |\\n`;\r\n          } else {\r\n            let first = line.slice(0, bodyLength - 1);\r\n            let last = line.slice(bodyLength, 259);\r\n\r\n            text += `| ${first} |\\n`;\r\n            text += '| ' + ' '.repeat(keyLength + 2);\r\n            text += '| ' + \" \".repeat(bodyLength - last.length) + ' |' + '\\n'\r\n          }\r\n        }//end if\r\n      }//end for\r\n      text += header;\r\n      console.log(text, data);\r\n    },\r\n    updateMortality(){\r\n      if(!this.deaths.hasError && this.fishBatch.population > 0){\r\n        let mortality = (this.deaths.value / this.fishBatch.population) * 100;\r\n        this.mortality = round(mortality, 2);\r\n      }else{\r\n        this.mortality = null;\r\n      }\r\n    },\r\n    // *======================================*\r\n    // *================ CRUD ================*\r\n    // *======================================*\r\n    submit() {\r\n      if (this.validateSubmit()) {\r\n        if (this.mode === 'register') {\r\n          this.__store();\r\n        } else if (this.mode === 'updating') {\r\n          this.__update();\r\n        }\r\n      }\r\n    },\r\n    __store() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.storeDeathReport(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            let info = {\r\n              fishBatch: this.fishBatch,\r\n              death: res.death,\r\n            }\r\n            // Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('death-was-stored', info);\r\n            //Se resetea el formulario\r\n            this.reset();\r\n          } else {\r\n            console.log(res.errors);\r\n            this.notifyErrors(res.errors);\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    __update() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.updateDeathReport(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            let info = {\r\n              fishBatch: this.fishBatch,\r\n              death: res.death,\r\n            }\r\n            // Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('death-was-updated', info);\r\n            //Se resetea el formulario\r\n            this.reset();\r\n          } else {\r\n            console.log(res.errors);\r\n            this.notifyErrors(res.errors);\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    getSubmitData() {\r\n      let data = {\r\n        fishBatchId: this.fishBatch.id,\r\n        deaths: this.deaths.value,\r\n      };\r\n\r\n      if (this.mode === 'updating') {\r\n        data.deathId = this.originalDeath.id;\r\n      }\r\n\r\n      return data;\r\n    },\r\n    // *===============================================*\r\n    // *================ VALIDACIONES =================*\r\n    // *===============================================*\r\n    validateDeaths() {\r\n      let value = this.deaths.value;\r\n      let message = null;\r\n\r\n      if (value && value > 0) {\r\n        if(value >= this.deaths.min){\r\n          if(value <= this.deaths.max){\r\n            this.deaths.isOk();\r\n            this.updateMortality();\r\n            return true;\r\n          }else{\r\n            message = 'Las muertes superan la población del estanque.';\r\n          }\r\n        }else{\r\n          message = \"Se debe registrar almeno 1 muerte.\";\r\n        }\r\n      } else {\r\n        message = \"Este campo es obligatorio.\";\r\n      }\r\n\r\n      this.deaths.setError(message);\r\n      this.mortality = null;\r\n      return false;\r\n    },\r\n    validateSubmit() {\r\n      let validations = [];\r\n      validations.push(this.validateDeaths());\r\n      //Retorna false si alguna de las validaciones es falsa, pero valida todos los campos\r\n      return !validations.some(val => val === false);\r\n    }\r\n  }\r\n}//.end object","import { isEmpty } from 'lodash';\r\nimport input from '../input';\r\nconst dayjs = require('dayjs');\r\nvar isSameOrBefore = require('dayjs/plugin/isSameOrBefore');\r\ndayjs.extend(isSameOrBefore);\r\n\r\nvar isSameOrAfter = require('dayjs/plugin/isSameOrAfter');\r\ndayjs.extend(isSameOrAfter);\r\n\r\n\r\nwindow.fishBatchExpenseForm = () => {\r\n  return {\r\n    /** Define si el formulario se muestra o no */\r\n    visible: false,\r\n    /** \r\n     * Establece el tipo de formulario, \r\n     * si register para nuevo costo o \r\n     * updating para actualizar uno existente \r\n     * */\r\n    mode: 'register',\r\n    /**\r\n     * Instnacia del lote de peces en el que se desea \r\n     * crear o actualizar un costo.\r\n     */\r\n    fishBatch: null,\r\n    /** Instancia original del gasto que se desea modificar */\r\n    originalExpense: null,\r\n    // *===========================================*\r\n    // *========== Campos del formulario ==========*\r\n    // *===========================================*\r\n    /** Establece el momento en el que se registra el gasto */\r\n    inThisMoment: true,\r\n    /** Fecha del gasto en formato YYYY-MM-DD */\r\n    date: null,\r\n    /** Habilita el ingreso manual de la hora */\r\n    setTime: false,\r\n    /** Hora en la que se registra el gasto */\r\n    time: null,\r\n    /** Información adicional del gasto a registrar */\r\n    description: null,\r\n    /** Importe del gasto a registrar en pesos colombianos */\r\n    amount: null,\r\n    // *====================================================*\r\n    // *========== Relacionadas con el componente ==========*\r\n    // *====================================================*\r\n    /** Define si el componente está esperando una respuesta del servidor */\r\n    waiting: false,\r\n    /** Se encarga de las peticones al servidor */\r\n    wire: null,\r\n    /** Se encarga de administrar los eventos personalizados */\r\n    dispatch: null,\r\n    /** Permite acceder a las referencias del componente en el DOM */\r\n    refs: null,\r\n    // *=====================================================*\r\n    // *============= METODOS DE INICIALIZACIÓN =============*\r\n    // *=====================================================*\r\n    init(wire = null, dispatch = null, refs = null) {\r\n      this.wire = wire;\r\n      this.dispatch = dispatch;\r\n      this.refs = refs;\r\n      this.__createInputs();\r\n    },\r\n    __createInputs() {\r\n      //FECHA\r\n      this.date = input({\r\n        id: 'expenseDate',\r\n        name: 'date',\r\n        label: 'Selecciona una fecha',\r\n        required: true,\r\n        max: dayjs(),\r\n        min: dayjs(),\r\n      });\r\n\r\n      //HORA\r\n      this.time = input({\r\n        id: 'expenseTime',\r\n        name: 'time',\r\n        label: 'Hora',\r\n        required: true,\r\n        value: dayjs().format('HH:mm')\r\n      });\r\n\r\n      //DESCRIPCIÓN\r\n      this.description = input({\r\n        id: 'expenseDescription',\r\n        name: 'description',\r\n        label: 'Descripción',\r\n        placeholder: 'Escribe los detalles aquí.',\r\n        min: 3,\r\n        max: 255,\r\n      });\r\n\r\n      this.amount = input({\r\n        id: 'expenseAmount',\r\n        name: 'amount',\r\n        label: 'Importe',\r\n        placeholder: '$0 [COP]',\r\n        require: true,\r\n        min: 100,\r\n        max: 1000000000\r\n      });\r\n    },\r\n    // *=====================================================*\r\n    // *================ METODOS DE UTILIDAD ================*\r\n    // *=====================================================*\r\n    reset() {\r\n      this.visible = false;\r\n      this.mode = \"register\";\r\n      this.fishBatch = null;\r\n      this.waiting = false;\r\n      //Se rresetean los formulario\r\n      this.inThisMoment = true;\r\n      this.setTime = false;\r\n      this.description.reset();\r\n      this.amount.reset();\r\n      this.refs.amount.value = '';\r\n    },\r\n    /**\r\n     * Este metodo establece los parametros basicos con lo que\r\n     * se inicializa el formulario cuando es llamado por un evento global.\r\n     * @param {*} detail Detalles del modo en el que se habilita el formulario\r\n     */\r\n    enableForm(detail) {\r\n      this.visible = true;\r\n      this.mode = detail.mode;\r\n      this.fishBatch = detail.fishBatch;\r\n      this.date.min = dayjs(this.fishBatch.seedtime);\r\n\r\n      if (detail.mode === 'updating') {\r\n        this.originalExpense = detail.data;\r\n        this.inThisMoment = false;\r\n        this.date.value = detail.data.date.format('YYYY-MM-DD');\r\n        this.setTime = true;\r\n        this.time.value = detail.data.date.format('HH:mm');\r\n        this.description.value = detail.data.description;\r\n        this.amount.value = detail.data.amount;\r\n        this.refs.amount.value = window.formatCurrency(this.amount.value, 0);\r\n      }\r\n    },\r\n    cancel() {\r\n      this.reset();\r\n      this.dispatch('cancel-form-operation');\r\n    },\r\n    notifyErrors(errors) {\r\n      //Esto se encarga de actualizar los campos del formulario\r\n      for (const key in errors) {\r\n        if (Object.hasOwnProperty.call(errors, key)) {\r\n          const error = errors[key];\r\n          if (Object.hasOwnProperty.call(this, key)) {\r\n            this[key].setError(error);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    formatAmount() {\r\n      //Recupero el valor\r\n      let value = window.deleteCurrencyFormat(this.refs.amount.value);\r\n      this.amount.value = value;\r\n      //Se vuelve a formatear\r\n      this.refs.amount.value = window.formatCurrency(value, 0);\r\n    },\r\n    __printSubmitData(data) {\r\n      let bodyLength = 60;\r\n      let separator = '-';\r\n      let header = '';\r\n      let left = `+${separator}`;\r\n      let right = `${separator}+`;\r\n      let text = '';\r\n\r\n      header = left + separator.repeat(bodyLength) + right + '\\n';\r\n      text = header;\r\n\r\n      for (const key in data) {\r\n        if (Object.hasOwnProperty.call(data, key)) {\r\n          let value = data[key] ? data[key] : 'null';\r\n          let keyLength = key.length;\r\n          let valueLength = value.length;\r\n          let line = `${key}: ${value}`;\r\n          if (line.length <= bodyLength) {\r\n            line += ' '.repeat(bodyLength - line.length);\r\n            text += `| ${line} |\\n`;\r\n          } else {\r\n            let first = line.slice(0, bodyLength - 1);\r\n            let last = line.slice(bodyLength, 259);\r\n\r\n            text += `| ${first} |\\n`;\r\n            text += '| ' + ' '.repeat(keyLength + 2);\r\n            text += '| ' + \" \".repeat(bodyLength - last.length) + ' |' + '\\n'\r\n          }\r\n        }//end if\r\n      }//end for\r\n      text += header;\r\n      console.log(text, data);\r\n    },\r\n    // *======================================*\r\n    // *================ CRUD ================*\r\n    // *======================================*\r\n    submit() {\r\n      if (this.validateSubmit()) {\r\n        if (this.mode === 'register') {\r\n          this.__store();\r\n        }else if(this.mode === 'updating'){\r\n          this.__update();\r\n        }\r\n      }\r\n    },\r\n    __store() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.storeExpense(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            let info = {\r\n              fishBatch: this.fishBatch,\r\n              expense: res.expense,\r\n            }\r\n            // Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('expense-was-stored', info);\r\n            //Se resetea el formulario\r\n            this.reset();\r\n          } else {\r\n            console.log(res.errors);\r\n            this.notifyErrors(res.errors);\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    __update() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.updateExpense(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            let info = {\r\n              fishBatch: this.fishBatch,\r\n              expense: res.expense,\r\n            }\r\n            // Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('expense-was-updated', info);\r\n            //Se resetea el formulario\r\n            this.reset();\r\n          } else {\r\n            console.log(res.errors);\r\n            this.notifyErrors(res.errors);\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    getSubmitData() {\r\n      let date = this.date.value;\r\n      let time = this.time.value;\r\n      let data = {\r\n        fishBatchId: this.fishBatch.id,\r\n        description: this.description.value,\r\n        amount: this.amount.value,\r\n        inThisMoment: this.inThisMoment,\r\n        setTime: this.setTime\r\n      };\r\n\r\n      if (!this.inThisMoment) {\r\n        data.date = date;\r\n        if (this.setTime) {\r\n          data.time = time;\r\n          data.fullDate = `${date} ${time}`;\r\n        }\r\n      }\r\n\r\n      if (this.mode === 'updating') {\r\n        data.expenseId = this.originalExpense.id;\r\n      }\r\n\r\n      return data;\r\n    },\r\n    // *===============================================*\r\n    // *================ VALIDACIONES =================*\r\n    // *===============================================*\r\n    validateDate() {\r\n      let value = this.date.value;\r\n      let min = dayjs(this.date.min).startOf('day');\r\n      let max = dayjs();\r\n      let errorMessage = null;\r\n\r\n      if (!this.inThisMoment) {\r\n        if (!isEmpty(value)) {\r\n          let date = dayjs(value, 'YYYY-MM-DD').startOf('day');\r\n          if (date.isSameOrAfter(min)) {\r\n            if (date.isSameOrBefore(max)) {\r\n              this.date.isOk();\r\n              //Se valida la hora\r\n              if (this.setTime) {\r\n                this.validateTime();\r\n              }\r\n\r\n              return true;\r\n            } else {\r\n              errorMessage = \"No se pueden agregar gastos en el futuro.\";\r\n            }\r\n          } else {\r\n            errorMessage = \"La fecha debe ser mayor a la fecha del lote\";\r\n          }\r\n        } else {\r\n          errorMessage = \"Se debe elegir una fecha valida\";\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n\r\n      this.date.setError(errorMessage);\r\n      return false;\r\n    },\r\n    validateTime() {\r\n      let time = this.time.value;\r\n      let date = this.date.value;\r\n      let min = dayjs(this.fishBatch.seedtime);\r\n      let max = dayjs();\r\n      let errorMessage = null;\r\n\r\n      if (!this.inThisMoment && this.setTime && !this.date.hasError) {\r\n        if (!isEmpty(time)) {\r\n          let fullDate = dayjs(`${date} ${time}`, 'YYYY-MM-DD HH:mm');\r\n          if (fullDate.isSameOrAfter(min)) {\r\n            if (fullDate.isSameOrBefore(max)) {\r\n              this.time.isOk();\r\n              return true;\r\n            } else {\r\n              errorMessage = \"Los gastos no se pueden realizar en el futuro\";\r\n            }\r\n          } else {\r\n            errorMessage = \"Se intenta registrar un gasto anterior al lote.\";\r\n          }\r\n        } else {\r\n          errorMessage = \"Debe escribir o seleccionar una hora válida\";\r\n        }\r\n      } else {\r\n        return true;\r\n      }\r\n\r\n      this.time.setError(errorMessage);\r\n      return false;\r\n    },\r\n    validateDescription() {\r\n      let value = this.description.value;\r\n      let min = this.description.min;\r\n      let max = this.description.max;\r\n      let errorMessage = null;\r\n\r\n      if (value && !isEmpty(value.trim())) {\r\n        if (value.length >= min) {\r\n          if (value.length <= max) {\r\n            this.description.isOk();\r\n            return true;\r\n          } else {\r\n            errorMessage = `La descripción no debe superar los ${max} caracteres.`\r\n          }\r\n        } else {\r\n          errorMessage = `Debe tener ${min} o mas caracteres`;\r\n        }\r\n      } else {\r\n        errorMessage = \"Este campo es obligatorio.\";\r\n      }\r\n\r\n      this.description.setError(errorMessage);\r\n      return false;\r\n    },\r\n    validateAmount() {\r\n      let value = this.amount.value;\r\n      let min = this.amount.min;\r\n      let max = this.amount.max;\r\n      let errorMessage = null;\r\n\r\n      if (value) {\r\n        if (value >= min) {\r\n          if (value < max) {\r\n            this.amount.isOk();\r\n            return true;\r\n          } else {\r\n            errorMessage = `El importe debe ser menor que ` + window.formatCurrency(max, 0);\r\n          }\r\n        } else {\r\n          errorMessage = \"El importe minimo debe ser de \" + window.formatCurrency(min, 0);\r\n        }\r\n      } else {\r\n        errorMessage = \"Este campo es obligatorio.\"\r\n      }\r\n\r\n      this.amount.setError(errorMessage);\r\n      return false;\r\n    },\r\n    validateSubmit() {\r\n      let validations = [];\r\n      validations.push(this.validateDate());\r\n      validations.push(this.validateTime());\r\n      validations.push(this.validateDescription());\r\n      validations.push(this.validateAmount());\r\n\r\n      //Retorna false si alguna de las validaciones es falsa, pero valida todos los campos\r\n      return !validations.some(val => val === false);\r\n    }\r\n  }//.end return\r\n}//.end method","import input from '../input';\r\n\r\n//CONFIGURACIÓN DE DAYJS\r\nconst dayjs = require('dayjs');\r\nlet isSameOrBefore = require('dayjs/plugin/isSameOrBefore');\r\ndayjs.extend(isSameOrBefore);\r\n\r\nwindow.fishBatchForm = () => {\r\n  return {\r\n    /** Esta variable determina si se muestra o no el formulario en pantalla */\r\n    visible: false,\r\n    /**\r\n     * Determina el tipo de formulario\r\n     * register: Para nuevo lote de peces\r\n     * updating: Para actualizar un lote existente\r\n     */\r\n    mode: 'register',\r\n    /** Todas las instancias de los estanques */\r\n    allFishponds: [],\r\n    /** Instancias de los estanque libres */\r\n    fishponds: [],\r\n    /** Instancia del lote que se desea actualizar */\r\n    fishBatch: null,\r\n    // *===========================================*\r\n    // *========== Campos del formulario ==========*\r\n    // *===========================================*\r\n    /** Campo con el identificador del estanque donde se desea sembrar */\r\n    fishpondId: null,\r\n    /** Variable que habilita el ingreso de la fecha */\r\n    inThisMoment: true,\r\n    /** Fecha en la que que se realiza la siembra */\r\n    date: null,\r\n    /** Variable que habilita el ingreso de la hora */\r\n    setTime: false,\r\n    /** Hora en la que se realiza la siembra */\r\n    time: null,\r\n    /** Población inicial de la siembra */\r\n    population: null,\r\n    /** Peso promedio de los alevinos */\r\n    averageWeight: null,\r\n    /** Muestra en el formulario la biomasa del lote inicial */\r\n    biomass: null,\r\n    /** Costo del lote en pesos colombianos */\r\n    amount: null,\r\n    /** Es el valor en pesos de cada alevino */\r\n    unitCost: null,\r\n    // *====================================================*\r\n    // *========== Relacionadas con el componente ==========*\r\n    // *====================================================*\r\n    /** Define si el componente está esperando una respuesta del servidor */\r\n    waiting: false,\r\n    /** Se encarga de las peticones al servidor */\r\n    wire: null,\r\n    /** Se encarga de administrar los eventos personalizados */\r\n    dispatch: null,\r\n    /** Permite acceder a las referencias del componente en el DOM */\r\n    refs: null,\r\n    // *===============================================*\r\n    // *============ Metodos del Componente ===========*\r\n    // *===============================================*\r\n    /**\r\n     * Se encarga de montar los datos iniciales\r\n     * @param {*} wire Objeto de livewire encargado de las peticiones\r\n     * @param {*} dispatch Onjeto de alpine encargado de los eventos\r\n     * @param {*} refs Objeto de alpine encargado de las referencias\r\n     */\r\n    init(wire = null, dispatch = null, refs = null) {\r\n      this.wire = wire;\r\n      this.dispatch = dispatch;\r\n      this.refs = refs;\r\n      this.__createInputs();\r\n      this.__buildFishponds(window.initialData.fishponds);\r\n    },\r\n    /**\r\n     * Se encarga de crear las intancias de los campos del formulario\r\n     */\r\n    __createInputs() {\r\n      this.fishpondId = input({\r\n        id: 'fishpondId',\r\n        name: 'fishpondId',\r\n        label: 'Estanque a Sembrar',\r\n        placeholder: 'Selecciona un estanque',\r\n      });\r\n\r\n      this.date = input({\r\n        id: 'seedtimeDate',\r\n        name: 'date',\r\n        label: 'Selecciona una fecha',\r\n        required: true,\r\n        max: dayjs().format('YYYY-MM-DD'),\r\n      });\r\n\r\n      this.time = input({\r\n        id: 'seetimeTime',\r\n        name: 'time',\r\n        label: 'Hora',\r\n        required: true,\r\n      });\r\n\r\n      this.population = input({\r\n        id: 'fish_batch_population',\r\n        name: 'population',\r\n        label: 'Población Inicial',\r\n        placeholder: 'Ingresa la población aquí.',\r\n        require: true,\r\n        min: 0,\r\n        max: 60000,\r\n        step: 1\r\n      });\r\n\r\n      this.averageWeight = input({\r\n        id: 'fish_batch_average_weight',\r\n        name: 'averageWeight',\r\n        label: 'Peso promedio inicial [g]',\r\n        placeholder: 'Ingresa el peso aquí.',\r\n        require: true,\r\n        min: 0,\r\n        max: 1000,\r\n        step: 0.1\r\n      });\r\n\r\n      this.amount = input({\r\n        id: 'fish_batch_amount',\r\n        name: 'amount',\r\n        label: 'Costo del lote [COP]',\r\n        placeholder: '$0.00',\r\n        require: true,\r\n        min: 100,\r\n        max: 99999999.99\r\n      })\r\n    },\r\n    /**\r\n     * Este metodo se encarga de crear las instancias de los\r\n     * estanque que luego son usadas para sembrar los lotes y\r\n     * luego fltra los estanques que no estan en uso\r\n     * @param {*} data Arreglo cons los datos de los estanques\r\n     */\r\n    __buildFishponds(data) {\r\n      //Se limpia el arreglo\r\n      this.allFishponds = [];\r\n      //Se construye las instancias\r\n      data.forEach(record => {\r\n        this.allFishponds.push({\r\n          id: record.id,\r\n          name: record.name,\r\n          inUse: record.inUse\r\n        });\r\n      });\r\n\r\n      //Se filtra por aquellos que no están en uso\r\n      this.fishponds = this.allFishponds.filter(f => !f.inUse);\r\n    },\r\n    /**\r\n     * Reinicia el componente a su estado original\r\n     */\r\n    reset() {\r\n      this.visible = false;\r\n      this.mode = \"register\";\r\n      this.fishBatch = null;\r\n      this.fishponds = this.allFishponds.filter(x => !x.inUse);\r\n      //Se resetean los campos\r\n      this.fishpondId.reset();\r\n      this.inThisMoment = true;\r\n      this.population.reset();\r\n      this.averageWeight.reset();\r\n      this.biomass = null;\r\n      this.amount.reset();\r\n      this.refs.fishBatchAmount.value = '';\r\n      this.unitCost = null;\r\n    },\r\n    enableForm(mode = 'register', fishBatch = null) {\r\n      this.visible = true;\r\n      this.mode = mode;\r\n      if (mode === 'updating') {\r\n        //Se busca el estanque \r\n        let fishpond = this.allFishponds.find(x => x.id === fishBatch.fishpond.id);\r\n        //Se agrega el estanque al listado\r\n        this.fishponds.push(fishpond);\r\n        //Se selecciona\r\n        setTimeout(() => {\r\n          this.fishpondId.value = fishpond.id;\r\n        }, 100);\r\n\r\n        //Se carga la fecha de la siembra\r\n        this.inThisMoment = false;\r\n        this.date.value = fishBatch.seedtime.format('YYYY-MM-DD');\r\n        this.setTime = true;\r\n        this.time.value = fishBatch.seedtime.format('HH:mm');\r\n\r\n        //Se actualiza la población incial, peso y biomasa\r\n        this.population.value = fishBatch.initialPopulation;\r\n        this.averageWeight.value = fishBatch.initialWeight;\r\n        this.updateBiomass();\r\n\r\n        //Se actualiza el importa\r\n        this.amount.value = fishBatch.amount;\r\n        this.refs.fishBatchAmount.value = window.formatCurrency(fishBatch.amount, 0);\r\n        this.updateUnitCost();\r\n\r\n        this.fishBatch = fishBatch;\r\n      }\r\n    },\r\n    /**\r\n     * Resetea el formulario y se encarga de emitir el evento\r\n     * de que no he ha realizado ninguna acción\r\n     */\r\n    cancel() {\r\n      this.reset();\r\n      this.dispatch('cancel-form-operation');\r\n    },\r\n    // *===============================================*\r\n    // *================= PETICIONES ==================*\r\n    // *===============================================*\r\n    submit() {\r\n      if (this.validateSubmit()) {\r\n        if (this.mode === 'register') {\r\n          this.__store();\r\n        } else if (this.mode === 'updating') {\r\n          this.__update();\r\n        }\r\n      }\r\n    },\r\n    __store() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.storeFishBatch(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            //Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('fish-batch-created', { fishBatch: res.fishBatch });\r\n            //Se resetea el formulario\r\n            this.reset();\r\n            //Se actualiza el arreglo con los estanques\r\n            this.__buildFishponds(res.fishponds);\r\n          } else {\r\n            if (res.errors?.fishpondInUse) {\r\n              this.fishpondId.reset();\r\n              this.__buildFishponds(res.fishponds);\r\n            } else {\r\n              this.notifyErrors(res.errors);\r\n            }\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    __update() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.updateFishBatch(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            //Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('fish-batch-updated', { fishBatch: res.fishBatch });\r\n            //Se resetea el formulario\r\n            this.reset();\r\n            //Se actualiza el arreglo con los estanques\r\n            this.__buildFishponds(res.fishponds);\r\n          } else {\r\n            if (res.errors?.fishpondInUse) {\r\n              this.fishpondId.reset();\r\n              this.__buildFishponds(res.fishponds);\r\n            } else {\r\n              this.notifyErrors(res.errors);\r\n            }\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    /**\r\n     * Crea un objeto con los datos requeridos por el servidor\r\n     * ya sea para registrar un nuevo lote o para actualizarlo.\r\n     * @returns {*}\r\n     */\r\n    getSubmitData() {\r\n      let data = {\r\n        fishpondId: this.fishpondId.value,\r\n        population: this.population.value,\r\n        averageWeight: this.averageWeight.value,\r\n        amount: this.amount.value,\r\n        inThisMoment: this.inThisMoment,\r\n        setTime: this.setTime,\r\n      }\r\n\r\n      if (!this.inThisMoment) {\r\n        data.date = this.date.value;\r\n        if (this.setTime) {\r\n          data.time = this.time.value;\r\n        }\r\n      }\r\n\r\n      if (this.mode === 'updating') {\r\n        data.fishBatchId = this.fishBatch?.id;\r\n      }\r\n\r\n      return data;\r\n    },\r\n    // *===============================================*\r\n    // *================ VALIDACIONES =================*\r\n    // *===============================================*\r\n    validateFishpond() {\r\n      let value = this.fishpondId.value;\r\n      let ok = false;\r\n\r\n      if (value) {\r\n        if (this.fishponds.some(f => f.id === value)) {\r\n          ok = true;\r\n          this.fishpondId.isOk();\r\n        } else {\r\n          this.fishpondId.setError('Este estanque no se encuentra entre los elegibles.');\r\n        }\r\n      } else {\r\n        this.fishpondId.setError('Se debe elegir el estanque donde se va a sembrar');\r\n      }\r\n\r\n      return ok;\r\n    },\r\n    /**\r\n     * Se encarga de verificar que la fecha seleccionada por el usuario sea valida\r\n     * y que no supere el momento presente\r\n     * @returns {boolean}\r\n     */\r\n    validateDate() {\r\n      let value = this.date.value;\r\n      let isOk = false;\r\n\r\n      //Solo se verifica la fecha si se habilitó para ingresarla\r\n      if (!this.inThisMoment) {\r\n        if (value && value.length > 0) {\r\n          //Se crea una instancia de tiempo para comparar\r\n          let dateSelected = dayjs(value);\r\n          //Se verifica que la fecha sea correcta\r\n          if (dateSelected.isValid()) {\r\n            //Se compara con el momento actual\r\n            let now = dayjs();\r\n            if (dateSelected.isSameOrBefore(now)) {\r\n              this.date.isOk();\r\n              //Se procede a validar la hora\r\n              this.validateTime();\r\n              isOk = true;\r\n            } else {\r\n              this.date.setError('La fecha superior a hoy');\r\n            }\r\n          } else {\r\n            this.date.setError('La fecha es inválida');\r\n          }\r\n\r\n        } else {\r\n          this.date.setError('Este campo es requerido');\r\n        }\r\n      } else {\r\n        isOk = true;\r\n      }\r\n\r\n      return isOk;\r\n    },\r\n    /**\r\n     * Se encarga de verificar que la hora ingresada por el usuario \r\n     * sea anterior al momento actual del registro.\r\n     * @returns {boolean}\r\n     */\r\n    validateTime() {\r\n      let value = this.time.value;\r\n      let isOk = false;\r\n\r\n      //Solo se verifica si se habilitó para ingresarla\r\n      if (this.setTime) {\r\n        if (value && value.length > 0) {\r\n          /**\r\n         * Solo se valida si la fecha ha sido seleccionada y tiene valor\r\n         * ya que es necesaria para verificar el momento del registro\r\n         */\r\n          if (this.date.value && this.date.value.length > 0 && !this.date.hasError) {\r\n            let dateValue = this.date.value;\r\n            let fullDate = dayjs(`${dateValue} ${value}`);\r\n            let now = dayjs();\r\n\r\n            if (fullDate.isValid()) {\r\n              if (fullDate.isSameOrBefore(now)) {\r\n                this.time.isOk();\r\n                isOk = true;\r\n              } else {\r\n                this.time.setError('La combinacion fecha y hora superan al ahora');\r\n              }\r\n            } else {\r\n              this.time.setError('Formato de fecha inválido');\r\n            }\r\n          }\r\n        } else {\r\n          this.time.setError('El campo hora es requerido');\r\n        }\r\n      } else {\r\n        isOk = true;\r\n      }\r\n      return isOk;\r\n    },\r\n    validatePopulation() {\r\n      let value = this.population.value;\r\n      let min = this.population.min;\r\n      let max = this.population.max;\r\n\r\n      if (value) {\r\n        if (value > min) {\r\n          if (value < max) {\r\n            this.population.isOk();\r\n            this.updateBiomass();\r\n            this.updateUnitCost();\r\n            return true;\r\n          } else {\r\n            this.population.setError('Debe se mernor que ' + window.formatCurrency(max, 0, 'decimal') + ' peces');\r\n          }\r\n        } else {\r\n          this.population.setError('Debe ser mayor que ' + min);\r\n        }\r\n      } else {\r\n        this.population.setError('Este campo es requerido y no puede ser cero.');\r\n      }\r\n\r\n      return false;\r\n    },\r\n    validateAverageWeight() {\r\n      let value = this.averageWeight.value;\r\n      let min = this.averageWeight.min;\r\n      let max = this.averageWeight.max;\r\n      let message = null;\r\n\r\n      if (value) {\r\n        if (value > min) {\r\n          if (value < max) {\r\n            this.averageWeight.isOk();\r\n            this.updateBiomass();\r\n            return true;\r\n          } else {\r\n            message = `El peso promedio debe ser menor que ${max} g`;\r\n          }\r\n        } else {\r\n          message = `El peso promedio debe ser mayor o igual que ${min} g`;\r\n        }\r\n      } else {\r\n        message = 'Este campo es requerido y es obligatorio';\r\n      }\r\n\r\n      this.averageWeight.setError(message);\r\n      return false;\r\n    },\r\n    /**\r\n     * Verifica que el cmapo del importe sea valido\r\n     */\r\n    validateAmount() {\r\n      let value = this.amount.value;\r\n      let min = this.amount.min;\r\n      let max = this.amount.max;\r\n      let message = null;\r\n\r\n      if (value && value > 0) {\r\n        if (value >= min) {\r\n          if (value < max) {\r\n            this.amount.isOk();\r\n            return true;\r\n          } else {\r\n            message = `El costo no puede ser mayor que ${window.formatCurrency(max, 0)}.`;\r\n          }\r\n        } else {\r\n          message = 'El valor minino aceptado es de ' + window.formatCurrency(min, 0);\r\n        }\r\n      } else {\r\n        message = 'El costo del lotes es requerido y debe ser mayor que cero.';\r\n      }\r\n\r\n      this.amount.setError(message);\r\n      return false;\r\n    },\r\n    /**\r\n     * Realiza la validación de todos los campos y retorna true si todos\r\n     * son correctos.\r\n     * @returns {boolean}\r\n     */\r\n    validateSubmit() {\r\n      let validations = [];\r\n      validations.push(this.validateFishpond());\r\n      validations.push(this.validateDate());\r\n      validations.push(this.validateTime());\r\n      validations.push(this.validatePopulation());\r\n      validations.push(this.validateAverageWeight());\r\n      validations.push(this.validateAmount());\r\n\r\n      //Retorna false si alguna de las validaciones es falsa, pero valida todos los campos\r\n      return !validations.some(val => val === false);\r\n    },\r\n    notifyErrors(errors) {\r\n      //Esto se encarga de actualizar los campos del formulario\r\n      for (const key in errors) {\r\n        if (Object.hasOwnProperty.call(errors, key)) {\r\n          const error = errors[key];\r\n          if (Object.hasOwnProperty.call(this, key)) {\r\n            this[key].setError(error);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // *===============================================*\r\n    // *================= UTILIDADES ==================*\r\n    // *===============================================*\r\n    /**\r\n     * Recupera el valor del importe y se encarga de validarlo\r\n     * y daler formato al campo visible.\r\n     */\r\n    formatAmount(target) {\r\n      let value = window.deleteCurrencyFormat(target.value);\r\n      this.refs.fishBatchAmount.value = window.formatCurrency(value, 0);\r\n      this.amount.value = value;\r\n      this.validateAmount();\r\n      this.updateUnitCost();\r\n    },\r\n    /**\r\n     * Se encarga de calcular la biomasa teniendo en cuenta\r\n     * el peso promedio y la población sembrada. Este metodo se\r\n     * dispara cuando se validan estos dos campos.\r\n     */\r\n    updateBiomass() {\r\n      let population = this.population.value;\r\n      let averageWeight = this.averageWeight.value;\r\n      let biomass = 0;\r\n      let message = null;\r\n\r\n      biomass = !this.population.hasError && !this.averageWeight.hasError && population && averageWeight\r\n        ? population * averageWeight\r\n        : 0;\r\n\r\n      if (biomass > 0 && biomass < 500) {\r\n        message = `${biomass} g`\r\n      } else if (biomass >= 500) {\r\n        biomass = biomass / 1000;\r\n        message = window.formatCurrency(biomass, 1, 'decimal') + ' Kg';\r\n      }\r\n\r\n      this.biomass = message;\r\n    },\r\n    /**\r\n     * Se encarga de actualizar el costo unitario de los\r\n     * alevinos en funcion de la población y el importe\r\n     */\r\n    updateUnitCost() {\r\n      let population = this.population.value;\r\n      let amount = this.amount.value;\r\n      let unitCost = !this.amount.hasError && !this.population.hasError && population && population > 0 && amount\r\n        ? amount / population : null;\r\n\r\n      if (unitCost) {\r\n        this.unitCost = window.formatCurrency(unitCost, 2);\r\n      } else {\r\n        this.unitCost = null;\r\n      }\r\n    },\r\n    __printSubmitData(data) {\r\n      let bodyLength = 60;\r\n      let separator = '-';\r\n      let header = '';\r\n      let left = `+${separator}`;\r\n      let right = `${separator}+`;\r\n      let text = '';\r\n\r\n      header = left + separator.repeat(bodyLength) + right + '\\n';\r\n      text = header;\r\n\r\n      for (const key in data) {\r\n        if (Object.hasOwnProperty.call(data, key)) {\r\n          let value = data[key] ? data[key] : 'null';\r\n          let keyLength = key.length;\r\n          let valueLength = value.length;\r\n          let line = `${key}: ${value}`;\r\n          if (line.length <= bodyLength) {\r\n            line += ' '.repeat(bodyLength - line.length);\r\n            text += `| ${line} |\\n`;\r\n          } else {\r\n            let first = line.slice(0, bodyLength - 1);\r\n            let last = line.slice(bodyLength, 259);\r\n\r\n            text += `| ${first} |\\n`;\r\n            text += '| ' + ' '.repeat(keyLength + 2);\r\n            text += '| ' + \" \".repeat(bodyLength - last.length) + ' |' + '\\n'\r\n          }\r\n        }//end if\r\n      }//end for\r\n      text += header;\r\n      console.log(text, data);\r\n    },\r\n  }\r\n}","import { isEmpty } from 'lodash';\r\nimport input from '../input';\r\n\r\nwindow.fishBatchObservationForm = () => {\r\n  return {\r\n    /** Esta variable determina si se muestra o no el formulario en pantalla */\r\n    visible: false,\r\n    /**\r\n     * Determina el tipo de formulario\r\n     * register: Para nueva observación\r\n     * updating: Para actualizar la observación\r\n     */\r\n    mode: 'register',\r\n    /** Instancia del lote que se desea actualizar */\r\n    fishBatch: null,\r\n    /** Instancia de la oservación a actualizar */\r\n    originalObservation: null,\r\n    // *===========================================*\r\n    // *========== Campos del formulario ==========*\r\n    // *===========================================*\r\n    /** Corresponde al titulo de la observación */\r\n    title: null,\r\n    /** Corresponde al mensaje que se desea guardar */\r\n    message: null,\r\n    // *====================================================*\r\n    // *========== Relacionadas con el componente ==========*\r\n    // *====================================================*\r\n    /** Define si el componente está esperando una respuesta del servidor */\r\n    waiting: false,\r\n    /** Se encarga de las peticones al servidor */\r\n    wire: null,\r\n    /** Se encarga de administrar los eventos personalizados */\r\n    dispatch: null,\r\n    /** Permite acceder a las referencias del componente en el DOM */\r\n    refs: null,\r\n    // *===============================================*\r\n    // *============ Metodos del Componente ===========*\r\n    // *===============================================*\r\n    /**\r\n     * Se encarga de montar los datos iniciales\r\n     * @param {*} wire Objeto de livewire encargado de las peticiones\r\n     * @param {*} dispatch Onjeto de alpine encargado de los eventos\r\n     * @param {*} refs Objeto de alpine encargado de las referencias\r\n     */\r\n    init(wire = null, dispatch = null, refs = null) {\r\n      this.wire = wire;\r\n      this.dispatch = dispatch;\r\n      this.refs = refs;\r\n      this.__createInputs();\r\n    },\r\n    /**\r\n     * Se encarga de crear las intancias de los campos del formulario\r\n     */\r\n    __createInputs() {\r\n      this.title = input({\r\n        id: 'observationTitle',\r\n        name: 'title',\r\n        label: 'Titulo',\r\n        placeholder: 'Escribe el titulo aquí.',\r\n        min: 3,\r\n        max: 45,\r\n      });\r\n      this.message = input({\r\n        id: 'observationMessage',\r\n        name: 'message',\r\n        label: 'Observación',\r\n        placeholder: 'Escribe la observación aquí',\r\n        min: 3,\r\n        max: 255,\r\n      });\r\n    },\r\n    reset() {\r\n      this.visible = false;\r\n      this.mode = \"register\";\r\n      this.fishBatch = null;\r\n      this.originalObservation = null;\r\n      //Se resetean los campos\r\n      this.title.reset();\r\n      this.message.reset();\r\n    },\r\n    enableForm(data) {\r\n      this.visible = true;\r\n      this.mode = data.mode;\r\n      this.fishBatch = data.fishBatch;\r\n      if (this.mode === 'updating') {\r\n        this.originalObservation = data.data;\r\n        this.title.value = data.data.title;\r\n        this.message.value = data.data.message;\r\n      }\r\n    },\r\n    /**\r\n     * Resetea el formulario y se encarga de emitir el evento\r\n     * de que no he ha realizado ninguna acción\r\n     */\r\n    cancel() {\r\n      this.reset();\r\n      this.dispatch('cancel-form-operation');\r\n    },\r\n    // *===============================================*\r\n    // *================= PETICIONES ==================*\r\n    // *===============================================*\r\n    submit() {\r\n      if (this.validateSubmit()) {\r\n        if (this.mode === 'register') {\r\n          this.__store();\r\n        } else if (this.mode === 'updating') {\r\n          this.__update();\r\n        }\r\n      }\r\n    },\r\n    __store() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.storeObservation(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            let info = {\r\n              fishBatch: this.fishBatch,\r\n              observation: res.observation,\r\n            }\r\n            //Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('observation-was-created', info);\r\n            //Se resetea el formulario\r\n            this.reset();\r\n          } else {\r\n            console.log(res.errors);\r\n            this.notifyErrors(res.errors);\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    __update() {\r\n      this.waiting = true;\r\n      let data = this.getSubmitData();\r\n      this.wire.updateObservation(data)\r\n        .then(res => {\r\n          if (res.ok) {\r\n            let info = {\r\n              fishBatch: this.fishBatch,\r\n              observation: res.observation,\r\n            }\r\n            //Se emite el evento con los datos del nuevo lote de peces\r\n            this.dispatch('observation-was-updated', info);\r\n            //Se resetea el formulario\r\n            this.reset();\r\n          } else {\r\n            console.log(res.errors);\r\n            this.notifyErrors(res.errors);\r\n          }\r\n        }).catch(error => {\r\n          console.log(error);\r\n        }).finally(() => {\r\n          this.waiting = false;\r\n        })\r\n    },\r\n    /**\r\n     * Crea un objeto con los datos requeridos por el servidor\r\n     * ya sea para registrar un nuevo lote o para actualizarlo.\r\n     * @returns {*}\r\n     */\r\n    getSubmitData() {\r\n      let data = {\r\n        title: this.title.value,\r\n        message: this.message.value,\r\n        fishBatchId: this.fishBatch?.id,\r\n      }\r\n\r\n      if (this.mode === 'updating') {\r\n        data.observationId = this.originalObservation?.id;\r\n      }\r\n\r\n      return data;\r\n    },\r\n    // *===============================================*\r\n    // *================ VALIDACIONES =================*\r\n    // *===============================================*\r\n    validateTitle() {\r\n      let value = this.title.value;\r\n      let min = this.title.min;\r\n      let max = this.title.max;\r\n      let message = null;\r\n      if (!isEmpty(value)) {\r\n        if (value.length >= min) {\r\n          if (value.length <= max) {\r\n            this.title.isOk();\r\n            return true;\r\n          } else {\r\n            message = `El titulo debe tener menos de ${max} caracteres`;\r\n          }\r\n        } else {\r\n          message = `El titulo debe tener almeno ${min} caracteres.`\r\n        }\r\n      } else {\r\n        message = `Este campo es obligatorio.`;\r\n      }\r\n\r\n      this.title.setError(message);\r\n      return false;\r\n    },\r\n    validateMessage() {\r\n      let value = this.message.value;\r\n      let min = this.message.min;\r\n      let max = this.message.max;\r\n      let message = null;\r\n      if (!isEmpty(value)) {\r\n        if (value.length >= min) {\r\n          if (value.length <= max) {\r\n            this.message.isOk();\r\n            return true;\r\n          } else {\r\n            message = `El titulo debe tener menos de ${max} caracteres`;\r\n          }\r\n        } else {\r\n          message = `El titulo debe tener almeno ${min} caracteres.`\r\n        }\r\n      } else {\r\n        message = `Este campo es obligatorio.`;\r\n      }\r\n\r\n      this.message.setError(message);\r\n      return false;\r\n    },\r\n    /**\r\n     * Realiza la validación de todos los campos y retorna true si todos\r\n     * son correctos.\r\n     * @returns {boolean}\r\n     */\r\n    validateSubmit() {\r\n      let validations = [];\r\n      validations.push(this.validateTitle());\r\n      validations.push(this.validateMessage());\r\n\r\n      //Retorna false si alguna de las validaciones es falsa, pero valida todos los campos\r\n      return !validations.some(val => val === false);\r\n    },\r\n    notifyErrors(errors) {\r\n      //Esto se encarga de actualizar los campos del formulario\r\n      for (const key in errors) {\r\n        if (Object.hasOwnProperty.call(errors, key)) {\r\n          const error = errors[key];\r\n          if (Object.hasOwnProperty.call(this, key)) {\r\n            this[key].setError(error);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    // *===============================================*\r\n    // *================= UTILIDADES ==================*\r\n    // *===============================================*\r\n    __printSubmitData(data) {\r\n      let bodyLength = 60;\r\n      let separator = '-';\r\n      let header = '';\r\n      let left = `+${separator}`;\r\n      let right = `${separator}+`;\r\n      let text = '';\r\n\r\n      header = left + separator.repeat(bodyLength) + right + '\\n';\r\n      text = header;\r\n\r\n      for (const key in data) {\r\n        if (Object.hasOwnProperty.call(data, key)) {\r\n          let value = data[key] ? data[key] : 'null';\r\n          let keyLength = key.length;\r\n          let valueLength = value.length;\r\n          let line = `${key}: ${value}`;\r\n          if (line.length <= bodyLength) {\r\n            line += ' '.repeat(bodyLength - line.length);\r\n            text += `| ${line} |\\n`;\r\n          } else {\r\n            let first = line.slice(0, bodyLength - 1);\r\n            let last = line.slice(bodyLength, 259);\r\n\r\n            text += `| ${first} |\\n`;\r\n            text += '| ' + ' '.repeat(keyLength + 2);\r\n            text += '| ' + \" \".repeat(bodyLength - last.length) + ' |' + '\\n'\r\n          }\r\n        }//end if\r\n      }//end for\r\n      text += header;\r\n      console.log(text, data);\r\n    },\r\n  }\r\n}","/**\r\n * Contiene el objeto que controla el formulario\r\n * @param {int} id Identificador para la etiqueta y el input\r\n * @param {string} name Nombre del campo en el componente\r\n * @param {string} label Es el valor que se imprime en la etiqueta\r\n * @returns Objeto para el componente alpine\r\n */\r\nconst input = (config) => {\r\n  return {\r\n    id: config.id,\r\n    name: config.name,\r\n    label: config.label,\r\n    placeholder: config.placeholder,\r\n    type: config.type ? config.type : 'text',\r\n    min: config.min,\r\n    max: config.max,\r\n    step: config.step,\r\n    required: config.required,\r\n    value: config.value ? config.value : null,\r\n    default: config.value ? config.value : null,\r\n    hasError: false,\r\n    errorMessage: null,\r\n    disabled: false,\r\n    /**\r\n     * Regresa el formulario a su \r\n     * estado inicial\r\n     */\r\n    reset() {\r\n      this.value = this.default;\r\n      this.hasError = false;\r\n      this.errorMessage = null;\r\n    },\r\n    /**\r\n     * Actualiza el estado del formulario para notificar que existe un error\r\n     * @param {string} message Mensaje a mostra en la interfaz\r\n     */\r\n    setError(message) {\r\n      this.hasError = true;\r\n      this.errorMessage = message;\r\n    },\r\n    /**\r\n     * Limpia los erroes que este pueda tener\r\n     */\r\n    isOk() {\r\n      this.hasError = false;\r\n      this.errorMessage = null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default input;","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).dayjs=e()}(this,(function(){\"use strict\";var t=1e3,e=6e4,n=36e5,r=\"millisecond\",i=\"second\",s=\"minute\",u=\"hour\",a=\"day\",o=\"week\",f=\"month\",h=\"quarter\",c=\"year\",d=\"date\",$=\"Invalid Date\",l=/^(\\d{4})[-/]?(\\d{1,2})?[-/]?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?[.:]?(\\d+)?$/,y=/\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,M={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},m=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},g={s:m,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+m(r,2,\"0\")+\":\"+m(i,2,\"0\")},m:function t(e,n){if(e.date()<n.date())return-t(n,e);var r=12*(n.year()-e.year())+(n.month()-e.month()),i=e.clone().add(r,f),s=n-i<0,u=e.clone().add(r+(s?-1:1),f);return+(-(r+(n-i)/(s?i-u:u-i))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(t){return{M:f,y:c,w:o,d:a,D:d,h:u,m:s,s:i,ms:r,Q:h}[t]||String(t||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},D=\"en\",v={};v[D]=M;var p=function(t){return t instanceof _},S=function(t,e,n){var r;if(!t)return D;if(\"string\"==typeof t)v[t]&&(r=t),e&&(v[t]=e,r=t);else{var i=t.name;v[i]=t,r=i}return!n&&r&&(D=r),r||!n&&D},w=function(t,e){if(p(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new _(n)},O=g;O.l=S,O.i=p,O.w=function(t,e){return w(t,{locale:e.$L,utc:e.$u,x:e.$x,$offset:e.$offset})};var _=function(){function M(t){this.$L=S(t.locale,null,!0),this.parse(t)}var m=M.prototype;return m.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(O.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(l);if(r){var i=r[2]-1||0,s=(r[7]||\"0\").substring(0,3);return n?new Date(Date.UTC(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)):new Date(r[1],i,r[3]||1,r[4]||0,r[5]||0,r[6]||0,s)}}return new Date(e)}(t),this.$x=t.x||{},this.init()},m.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},m.$utils=function(){return O},m.isValid=function(){return!(this.$d.toString()===$)},m.isSame=function(t,e){var n=w(t);return this.startOf(e)<=n&&n<=this.endOf(e)},m.isAfter=function(t,e){return w(t)<this.startOf(e)},m.isBefore=function(t,e){return this.endOf(e)<w(t)},m.$g=function(t,e,n){return O.u(t)?this[e]:this.set(n,t)},m.unix=function(){return Math.floor(this.valueOf()/1e3)},m.valueOf=function(){return this.$d.getTime()},m.startOf=function(t,e){var n=this,r=!!O.u(e)||e,h=O.p(t),$=function(t,e){var i=O.w(n.$u?Date.UTC(n.$y,e,t):new Date(n.$y,e,t),n);return r?i:i.endOf(a)},l=function(t,e){return O.w(n.toDate()[t].apply(n.toDate(\"s\"),(r?[0,0,0,0]:[23,59,59,999]).slice(e)),n)},y=this.$W,M=this.$M,m=this.$D,g=\"set\"+(this.$u?\"UTC\":\"\");switch(h){case c:return r?$(1,0):$(31,11);case f:return r?$(1,M):$(0,M+1);case o:var D=this.$locale().weekStart||0,v=(y<D?y+7:y)-D;return $(r?m-v:m+(6-v),M);case a:case d:return l(g+\"Hours\",0);case u:return l(g+\"Minutes\",1);case s:return l(g+\"Seconds\",2);case i:return l(g+\"Milliseconds\",3);default:return this.clone()}},m.endOf=function(t){return this.startOf(t,!1)},m.$set=function(t,e){var n,o=O.p(t),h=\"set\"+(this.$u?\"UTC\":\"\"),$=(n={},n[a]=h+\"Date\",n[d]=h+\"Date\",n[f]=h+\"Month\",n[c]=h+\"FullYear\",n[u]=h+\"Hours\",n[s]=h+\"Minutes\",n[i]=h+\"Seconds\",n[r]=h+\"Milliseconds\",n)[o],l=o===a?this.$D+(e-this.$W):e;if(o===f||o===c){var y=this.clone().set(d,1);y.$d[$](l),y.init(),this.$d=y.set(d,Math.min(this.$D,y.daysInMonth())).$d}else $&&this.$d[$](l);return this.init(),this},m.set=function(t,e){return this.clone().$set(t,e)},m.get=function(t){return this[O.p(t)]()},m.add=function(r,h){var d,$=this;r=Number(r);var l=O.p(h),y=function(t){var e=w($);return O.w(e.date(e.date()+Math.round(t*r)),$)};if(l===f)return this.set(f,this.$M+r);if(l===c)return this.set(c,this.$y+r);if(l===a)return y(1);if(l===o)return y(7);var M=(d={},d[s]=e,d[u]=n,d[i]=t,d)[l]||1,m=this.$d.getTime()+r*M;return O.w(m,this)},m.subtract=function(t,e){return this.add(-1*t,e)},m.format=function(t){var e=this;if(!this.isValid())return $;var n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=O.z(this),i=this.$locale(),s=this.$H,u=this.$m,a=this.$M,o=i.weekdays,f=i.months,h=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},c=function(t){return O.s(s%12||12,t,\"0\")},d=i.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:a+1,MM:O.s(a+1,2,\"0\"),MMM:h(i.monthsShort,a,f,3),MMMM:h(f,a),D:this.$D,DD:O.s(this.$D,2,\"0\"),d:String(this.$W),dd:h(i.weekdaysMin,this.$W,o,2),ddd:h(i.weekdaysShort,this.$W,o,3),dddd:o[this.$W],H:String(s),HH:O.s(s,2,\"0\"),h:c(1),hh:c(2),a:d(s,u,!0),A:d(s,u,!1),m:String(u),mm:O.s(u,2,\"0\"),s:String(this.$s),ss:O.s(this.$s,2,\"0\"),SSS:O.s(this.$ms,3,\"0\"),Z:r};return n.replace(y,(function(t,e){return e||l[t]||r.replace(\":\",\"\")}))},m.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},m.diff=function(r,d,$){var l,y=O.p(d),M=w(r),m=(M.utcOffset()-this.utcOffset())*e,g=this-M,D=O.m(this,M);return D=(l={},l[c]=D/12,l[f]=D,l[h]=D/3,l[o]=(g-m)/6048e5,l[a]=(g-m)/864e5,l[u]=g/n,l[s]=g/e,l[i]=g/t,l)[y]||g,$?D:O.a(D)},m.daysInMonth=function(){return this.endOf(f).$D},m.$locale=function(){return v[this.$L]},m.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=S(t,e,!0);return r&&(n.$L=r),n},m.clone=function(){return O.w(this.$d,this)},m.toDate=function(){return new Date(this.valueOf())},m.toJSON=function(){return this.isValid()?this.toISOString():null},m.toISOString=function(){return this.$d.toISOString()},m.toString=function(){return this.$d.toUTCString()},M}(),b=_.prototype;return w.prototype=b,[[\"$ms\",r],[\"$s\",i],[\"$m\",s],[\"$H\",u],[\"$W\",a],[\"$M\",f],[\"$y\",c],[\"$D\",d]].forEach((function(t){b[t[1]]=function(e){return this.$g(e,t[0],t[1])}})),w.extend=function(t,e){return t.$i||(t(e,_,w),t.$i=!0),w},w.locale=S,w.isDayjs=p,w.unix=function(t){return w(1e3*t)},w.en=v[D],w.Ls=v,w.p={},w}));","!function(e,o){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=o(require(\"dayjs\")):\"function\"==typeof define&&define.amd?define([\"dayjs\"],o):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_locale_es_do=o(e.dayjs)}(this,(function(e){\"use strict\";function o(e){return e&&\"object\"==typeof e&&\"default\"in e?e:{default:e}}var s=o(e),d={name:\"es-do\",weekdays:\"domingo_lunes_martes_miércoles_jueves_viernes_sábado\".split(\"_\"),weekdaysShort:\"dom._lun._mar._mié._jue._vie._sáb.\".split(\"_\"),weekdaysMin:\"do_lu_ma_mi_ju_vi_sá\".split(\"_\"),months:\"enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre\".split(\"_\"),monthsShort:\"ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic\".split(\"_\"),weekStart:1,relativeTime:{future:\"en %s\",past:\"hace %s\",s:\"unos segundos\",m:\"un minuto\",mm:\"%d minutos\",h:\"una hora\",hh:\"%d horas\",d:\"un día\",dd:\"%d días\",M:\"un mes\",MM:\"%d meses\",y:\"un año\",yy:\"%d años\"},ordinal:function(e){return e+\"º\"},formats:{LT:\"h:mm A\",LTS:\"h:mm:ss A\",L:\"DD/MM/YYYY\",LL:\"D [de] MMMM [de] YYYY\",LLL:\"D [de] MMMM [de] YYYY h:mm A\",LLLL:\"dddd, D [de] MMMM [de] YYYY h:mm A\"}};return s.default.locale(d,null,!0),d}));","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isSameOrAfter=t()}(this,(function(){\"use strict\";return function(e,t){t.prototype.isSameOrAfter=function(e,t){return this.isSame(e,t)||this.isAfter(e,t)}}}));","!function(e,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(e=\"undefined\"!=typeof globalThis?globalThis:e||self).dayjs_plugin_isSameOrBefore=i()}(this,(function(){\"use strict\";return function(e,i){i.prototype.isSameOrBefore=function(e,i){return this.isSame(e,i)||this.isBefore(e,i)}}}));","!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(r=\"undefined\"!=typeof globalThis?globalThis:r||self).dayjs_plugin_relativeTime=e()}(this,(function(){\"use strict\";return function(r,e,t){r=r||{};var n=e.prototype,o={future:\"in %s\",past:\"%s ago\",s:\"a few seconds\",m:\"a minute\",mm:\"%d minutes\",h:\"an hour\",hh:\"%d hours\",d:\"a day\",dd:\"%d days\",M:\"a month\",MM:\"%d months\",y:\"a year\",yy:\"%d years\"};function i(r,e,t,o){return n.fromToBase(r,e,t,o)}t.en.relativeTime=o,n.fromToBase=function(e,n,i,d,u){for(var f,a,s,l=i.$locale().relativeTime||o,h=r.thresholds||[{l:\"s\",r:44,d:\"second\"},{l:\"m\",r:89},{l:\"mm\",r:44,d:\"minute\"},{l:\"h\",r:89},{l:\"hh\",r:21,d:\"hour\"},{l:\"d\",r:35},{l:\"dd\",r:25,d:\"day\"},{l:\"M\",r:45},{l:\"MM\",r:10,d:\"month\"},{l:\"y\",r:17},{l:\"yy\",d:\"year\"}],m=h.length,c=0;c<m;c+=1){var y=h[c];y.d&&(f=d?t(e).diff(i,y.d,!0):i.diff(e,y.d,!0));var p=(r.rounding||Math.round)(Math.abs(f));if(s=f>0,p<=y.r||!y.r){p<=1&&c>0&&(y=h[c-1]);var v=l[y.l];u&&(p=u(\"\"+p)),a=\"string\"==typeof v?v.replace(\"%d\",p):v(p,n,y.l,s);break}}if(n)return a;var M=s?l.future:l.past;return\"function\"==typeof M?M(a):M.replace(\"%s\",a)},n.to=function(r,e){return i(r,e,this,!0)},n.from=function(r,e){return i(r,e,this)};var d=function(r){return r.$u?t.utc():t()};n.toNow=function(r){return this.to(d(this),r)},n.fromNow=function(r){return this.from(d(this),r)}}}));","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.21';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function',\n      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading whitespace. */\n  var reTrimStart = /^\\s+/;\n\n  /** Used to match a single whitespace character. */\n  var reWhitespace = /\\s/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /**\n   * Used to validate the `validate` option in `_.template` variable.\n   *\n   * Forbids characters which could potentially change the meaning of the function argument definition:\n   * - \"(),\" (modification of function parameters)\n   * - \"=\" (default value)\n   * - \"[]{}\" (destructuring of function parameters)\n   * - \"/\" (beginning of a comment)\n   * - whitespace\n   */\n  var reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n      rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      // Use `util.types` for Node.js 10+.\n      var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n      if (types) {\n        return types;\n      }\n\n      // Legacy `process.binding('util')` for Node.js < 10.\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.trim`.\n   *\n   * @private\n   * @param {string} string The string to trim.\n   * @returns {string} Returns the trimmed string.\n   */\n  function baseTrim(string) {\n    return string\n      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n      : string;\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n   * character of `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the index of the last non-whitespace character.\n   */\n  function trimmedEndIndex(string) {\n    var index = string.length;\n\n    while (index-- && reWhitespace.test(string.charAt(index))) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      if (isSet(value)) {\n        value.forEach(function(subValue) {\n          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n        });\n      } else if (isMap(value)) {\n        value.forEach(function(subValue, key) {\n          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n        });\n      }\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        stack || (stack = new Stack);\n        if (isObject(srcValue)) {\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = safeGet(object, key),\n          srcValue = safeGet(source, key),\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || isFunction(objValue)) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      if (iteratees.length) {\n        iteratees = arrayMap(iteratees, function(iteratee) {\n          if (isArray(iteratee)) {\n            return function(value) {\n              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n            }\n          }\n          return iteratee;\n        });\n      } else {\n        iteratees = [identity];\n      }\n\n      var index = -1;\n      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n          return object;\n        }\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      var low = 0,\n          high = array == null ? 0 : array.length;\n      if (high === 0) {\n        return 0;\n      }\n\n      value = iteratee(value);\n      var valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision && nativeIsFinite(number)) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Check that cyclic values are equal.\n      var arrStacked = stack.get(array);\n      var othStacked = stack.get(other);\n      if (arrStacked && othStacked) {\n        return arrStacked == other && othStacked == array;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Check that cyclic values are equal.\n      var objStacked = stack.get(object);\n      var othStacked = stack.get(other);\n      if (objStacked && othStacked) {\n        return objStacked == other && othStacked == object;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = new array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return new Ctor;\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return new Ctor;\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      var type = typeof value;\n      length = length == null ? MAX_SAFE_INTEGER : length;\n\n      return !!length &&\n        (type == 'number' ||\n          (type != 'symbol' && reIsUint.test(value))) &&\n            (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the property to get.\n     * @returns {*} Returns the property value.\n     */\n    function safeGet(object, key) {\n      if (key === 'constructor' && typeof object[key] === 'function') {\n        return;\n      }\n\n      if (key == '__proto__') {\n        return;\n      }\n\n      return object[key];\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (string.charCodeAt(0) === 46 /* . */) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, subString) {\n        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     *\n     * // Combining several predicates using `_.overEvery` or `_.overSome`.\n     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n     * // => objects for ['fred', 'barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 30 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            timeWaiting = wait - timeSinceLastCall;\n\n        return maxing\n          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n          : timeWaiting;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            clearTimeout(timerId);\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = baseTrim(value);\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(object, sources) {\n      object = Object(object);\n\n      var index = -1;\n      var length = sources.length;\n      var guard = length > 2 ? sources[2] : undefined;\n\n      if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n        length = 1;\n      }\n\n      while (++index < length) {\n        var source = sources[index];\n        var props = keysIn(source);\n        var propsIndex = -1;\n        var propsLength = props.length;\n\n        while (++propsIndex < propsLength) {\n          var key = props[propsIndex];\n          var value = object[key];\n\n          if (value === undefined ||\n              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n            object[key] = source[key];\n          }\n        }\n      }\n\n      return object;\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (value != null &&\n          typeof value.toString != 'function') {\n        value = nativeObjectToString.call(value);\n      }\n\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      // The sourceURL gets injected into the source that's eval-ed, so be careful\n      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n      // and escape the comment, thus injecting code that gets evaled.\n      var sourceURL = '//# sourceURL=' +\n        (hasOwnProperty.call(options, 'sourceURL')\n          ? (options.sourceURL + '').replace(/\\s/g, ' ')\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Throw an error if a forbidden character was found in `variable`, to prevent\n      // potential command injection attacks.\n      else if (reForbiddenIdentifierChars.test(variable)) {\n        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n      }\n\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return baseTrim(string);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.slice(0, trimmedEndIndex(string) + 1);\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * **Note:** Multiple values can be checked by combining several matchers\n     * using `_.overSome`\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     *\n     * // Checking for several possible values\n     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * Following shorthands are possible for providing predicates.\n     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     *\n     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = lodashFunc.name + '';\n        if (!hasOwnProperty.call(realNames, key)) {\n          realNames[key] = [];\n        }\n        realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","const _ = require(\"lodash\");\r\nwindow.round = _.round;\r\n\r\nconst dayjs = require(\"dayjs\");\r\nrequire('dayjs/locale/es-do');\r\n\r\n//Se adiciona el pluging para tiempo relativo\r\nvar relativeTime = require('dayjs/plugin/relativeTime');\r\ndayjs.extend(relativeTime);\r\n\r\nvar isSameOrBefore = require('dayjs/plugin/isSameOrBefore');\r\ndayjs.extend(isSameOrBefore);\r\n\r\n//Se establece en español\r\ndayjs.locale('es-do');\r\n\r\n/**\r\n * Este metodo sirve para poder ordenar instancias segun\r\n * su fecha.\r\n * @param {*} item1 Instancia con un objeto tipo dayje\r\n * @param {*} item2 Instancia con un objeto tipo dayjs\r\n * @returns int\r\n */\r\nconst sortByDate = (item1, item2) => {\r\n  if (item1.date.isAfter(item2.date)) {\r\n    return 1;\r\n  }\r\n\r\n  if (item1.date.isBefore(item2.date)) {\r\n    return -1;\r\n  }\r\n\r\n  return 0;\r\n\r\n}\r\n\r\n\r\nwindow.app = () => {\r\n  return {\r\n    tab: 'sown-lot',    //[sown-lot, harvested-batch]\r\n    /** Define si la vista es del home o de algun lote */\r\n    home: true,\r\n    /** Arreglo con todos los lotes de peces */\r\n    allFishBatchs: [],\r\n    /** Arreglo con los estanques que están almacenados */\r\n    fishponds: [],\r\n    /** Arreglo con los lotes de peces correspodientes al tab */\r\n    fishBatchs: [],\r\n    /** Respondable de mostrar los formularios en pantalla */\r\n    formActive: false,\r\n    /** Se encarga de las peticones al servidor */\r\n    wire: null,\r\n    /** Se encarga de administrar los eventos personalizados */\r\n    dispatch: null,\r\n    /** Permite acceder a las referencias del componente en el DOM */\r\n    refs: null,\r\n    // *===========================================================*\r\n    // *================= METODOS DEL COMPONENTE ==================*\r\n    // *===========================================================*\r\n    init(wire = null, dispatch = null) {\r\n      this.wire = wire;\r\n      this.dispatch = dispatch;\r\n      let data = window.initialData;\r\n\r\n      //Se crean los estanques\r\n      data.fishponds.forEach(record => {\r\n        let fishpond = this.createFishpond(record);\r\n        this.fishponds.push(fishpond);\r\n      });\r\n\r\n      //Se crean los lotes de peces\r\n      data.fishBatchs.forEach(record => {\r\n        let fishBatch = this.createFishBatch(record);\r\n        this.allFishBatchs.push(fishBatch);\r\n      });\r\n\r\n      //Se seleccionan los lotes que están sembrados\r\n      this.updateFishBatchList();\r\n      // setTimeout(() => {\r\n      //   this.selectFishBatch(this.fishBatchs[0]);\r\n      // }, 1000);\r\n    },\r\n    /**\r\n         * Cambia el valor de la varible tab y actualiza el listado de\r\n         * lotes que se muestran en el panel principal.\r\n         * @param {string} tab En nombre del tab por el que se va a cambiar\r\n         */\r\n    changeTab(tab = 'sown-lot') {\r\n      if (tab !== this.tab) {\r\n        this.tab = tab;\r\n        this.updateFishBatchList();\r\n      }\r\n      //Metodo para actualizar el listado de lotes\r\n    },\r\n    updateFishBatchList() {\r\n      let tab = this.tab;\r\n      //Se recuperan los lotes segun el tab\r\n      if (tab === 'sown-lot') {\r\n        this.fishBatchs = this.allFishBatchs.filter(b => b.harvest === null);\r\n      } else if (tab === 'harvested-batch') {\r\n        this.fishBatchs = this.allFishBatchs.filter(b => b.harvest !== null);\r\n      }\r\n\r\n      //Algoritmo para ordenar por la fecha de siembra\r\n    },\r\n    enableForm(name = null, fishBatch = null, data = null) {\r\n      if (name) {\r\n        this.formActive = true;\r\n        let info = {\r\n          mode: 'register',\r\n          fishBatch: fishBatch,\r\n          data: data,\r\n        }\r\n\r\n        if (name === 'new-fish-batch') {\r\n          this.dispatch('enable-fish-batch-form', info);\r\n        } else if (name === 'update-fish-batch') {\r\n          info.mode = \"updating\";\r\n          this.dispatch('enable-fish-batch-form', info);\r\n        } else if (name === 'new-fish-batch-observation') {\r\n          this.dispatch('enable-fish-batch-observation-form', info);\r\n        } else if (name === 'update-fish-batch-observation') {\r\n          info.mode = 'updating';\r\n          this.dispatch('enable-fish-batch-observation-form', info);\r\n        } else if (name === \"new-fish-batch-expense\") {\r\n          this.dispatch('enable-fish-batch-expense-form', info);\r\n        } else if (name === 'update-fish-batch-expense') {\r\n          info.mode = 'updating';\r\n          this.dispatch('enable-fish-batch-expense-form', info);\r\n        } else if (name === 'new-fish-batch-death') {\r\n          this.dispatch('enable-fish-batch-death-form', info);\r\n        } else if (name === 'update-fish-batch-death') {\r\n          info.mode = 'updating';\r\n          this.dispatch('enable-fish-batch-death-form', info);\r\n        } else if (name === 'new-fish-batch-biometry') {\r\n          this.dispatch('enable-fish-batch-biometry-form', info);\r\n        } else if (name === 'update-fish-batch-biometry') {\r\n          info.mode = 'updating';\r\n          this.dispatch('enable-fish-batch-biometry-form', info);\r\n        }\r\n        else {\r\n          this.formActive = false;\r\n        }\r\n      }\r\n    },\r\n    selectFishBatch(fishBatch) {\r\n      this.home = false;\r\n      this.dispatch('fish-batch-selected', fishBatch);\r\n    },\r\n    // *===========================================================*\r\n    // *================= CREACIÓN DE INSTANCIAS ==================*\r\n    // *===========================================================*\r\n    /**\r\n     * Recibe los datos puros del servidor y los convierte en instancias de \r\n     * lotes. Este metodo se debe llamar despues de haber creado los estanqes\r\n     * @param {*} data Datos puros de lotes\r\n     */\r\n    createFishBatch(data) {\r\n      //Se crea el objeto con la estructura de datos\r\n      let fishBatch = {\r\n        //Datos provenientes del servidor\r\n        id: data.id,\r\n        seedtime: dayjs(data.seedtime),\r\n        harvest: data.harvest ? dayjs(data.harvest) : null,\r\n        initialPopulation: data.initialPopulation,\r\n        initialWeight: data.initialWeight,\r\n        population: data.population,\r\n        amount: data.amount,\r\n        observations: [],\r\n        expenses: [],\r\n        biometries: [],\r\n        deathReports: [],\r\n        createdAt: dayjs(data.createdAt),\r\n        updatedAt: dayjs(data.updatedAt),\r\n        //Variables monetarias\r\n        expenseAmount: 0,                     //Sumatoria de todos los gastos\r\n        totalAmount: data.amount,             //Sumatoria de coste inicial, gastos y alimentación\r\n        unitPrice: 0,                         //Valor unitario de cada pez\r\n        price: 0,                             //El precio de la biomasa en COP/Kg\r\n        //Variables de la biomasa\r\n        initialBiomass: null,                 //Biomasa teniendo encuenta los datos de siembre\r\n        averageWeight: data.initialWeight,    //Peso promedio del la ultima biometría o por defecto peso inicial\r\n        biomass: null,                        //La biomasa teniendo en cuenta el peso promedio\r\n        //Variable relacionadas a la mortalidad\r\n        totalDeaths: 0,\r\n        mortality: 0,\r\n      }\r\n\r\n      //Se crean las observaciones\r\n      data.observations.forEach(item => { fishBatch.observations.push(this.createObservation(item)); });\r\n\r\n      //Se crean los gastos\r\n      data.expenses.forEach(item => { fishBatch.expenses.push(this.createExpense(item)); });\r\n\r\n      //Se crean las biometrias\r\n      data.biometries.forEach(record => { fishBatch.biometries.push(this.createBiometry(record)); })\r\n\r\n      //Se crean los registros de las muertes\r\n      data.deaths.forEach(record => { fishBatch.deathReports.push(this.createDeathReport(record)); });\r\n\r\n      //Se crean los registros de las dosificaciones\r\n      //TODO\r\n\r\n      //Se siembra el lote en el estanque\r\n      let fishpond = this.fishponds.find(item => item.id === data.fishpondId);\r\n      fishpond.seed(data.population);\r\n      fishBatch.fishpond = fishpond;\r\n\r\n      this.__updateAllParameters(fishBatch);\r\n\r\n      return fishBatch;\r\n    },\r\n    /**\r\n     * Recibe los datos puros del servidor y los convierte en una instancia\r\n     * de estanque para que pueda ser usado con un lote.\r\n     * @param {*} data Objeto con los datos generales de un estanque\r\n     */\r\n    createFishpond(data) {\r\n      let fishpond = {};\r\n      const FISHPOND_TYPES = {\r\n        rectangular: 'Rectangular',\r\n        circular: 'Circular',\r\n      }\r\n\r\n      //Se guarda la información basica\r\n      fishpond.id = data.id;\r\n      fishpond.name = data.name;\r\n      fishpond.type = FISHPOND_TYPES[data.type];\r\n      fishpond.capacity = data.capacity;\r\n      fishpond.inUse = data.inUse;\r\n\r\n      //Se calcula el area en m2\r\n      if (data.type === 'rectangular') {\r\n        fishpond.area = data.width && data.long\r\n          ? _.round(data.width * data.long, 2)\r\n          : null;\r\n      } else if (data.type === 'circular') {\r\n        fishpond.area = data.diameter\r\n          ? _.round(Math.PI * Math.pow((data.diameter / 2.0), 2))\r\n          : null;\r\n      }\r\n\r\n      //Se calcula el volumen en m3\r\n      if (fishpond.area && data.effectiveHeight || data.maxHeight) {\r\n        let height = data.effectiveHeight || data.maxHeight;\r\n        fishpond.volume = _.round(fishpond.area * height, 1);\r\n        fishpond.depth = height;\r\n      }\r\n\r\n      //Se agregan las variable situacionales\r\n      fishpond.population = null;\r\n      fishpond.densityByArea = null;\r\n      fishpond.desityByVolume = null;\r\n\r\n      //Se agrea un metodo para sembrar una poblacion\r\n      //que se encarga de actualizar las variables situacionales\r\n      fishpond.seed = function (population = null) {\r\n        if (population && population > 0) {\r\n          this.population = population;\r\n          this.densityByArea = this.area ? _.round(population / this.area, 0) : null;\r\n          this.densityByVolume = this.volume ? _.round(population / this.volume, 0) : null;\r\n        }\r\n      }\r\n\r\n      return fishpond;\r\n    },\r\n    createObservation(data) {\r\n      return {\r\n        id: data.id,\r\n        title: data.title,\r\n        message: data.message,\r\n        createdAt: dayjs(data.createdAt),\r\n        updatedAt: dayjs(data.updatedAt),\r\n        createIsSameUpdate: dayjs(data.createdAt).isSame(dayjs(data.updatedAt)),\r\n      };\r\n    },\r\n    createExpense(data) {\r\n      return {\r\n        id: data.id,\r\n        date: dayjs(data.date),\r\n        description: data.description,\r\n        amount: data.amount,\r\n        createdAt: dayjs(data.createdAt),\r\n        updatedAt: dayjs(data.updatedAt),\r\n        createIsSameUpdate: dayjs(data.createdAt).isSame(dayjs(data.updatedAt)),\r\n      }\r\n    },\r\n    createDeathReport(data) {\r\n      return {\r\n        id: data.id,\r\n        deaths: data.deaths,\r\n        totalDeaths: 0,\r\n        initialPopulation: null,\r\n        population: null,\r\n        mortality: null,\r\n        globalMortality: null,\r\n        createdAt: dayjs(data.createdAt),\r\n        updatedAt: dayjs(data.updatedAt),\r\n        createIsSameUpdate: dayjs(data.createdAt).isSame(dayjs(data.updatedAt)),\r\n        setPopulation(population) {\r\n          this.initialPopulation = population;\r\n          this.population = population - this.deaths;\r\n          this.mortality = _.round((this.deaths / population * 100), 2)\r\n        }\r\n      }\r\n    },\r\n    createBiometry(data) {\r\n      let measurements = data.measurements;\r\n      let sampleSize = 0;\r\n      let totalWeight = 0;\r\n      let averageWeight = 0;\r\n      let totalLong = 0;\r\n      let averageLong = 0;\r\n\r\n      measurements.forEach(measuring => {\r\n        sampleSize++;\r\n        totalWeight += measuring.weight ? measuring.weight : 0;\r\n        totalLong += measuring.long ? measuring.long : 0;\r\n      });\r\n\r\n      if (sampleSize > 0) {\r\n        averageWeight = totalWeight / sampleSize;\r\n        averageLong = _.round(totalLong / sampleSize, 2);\r\n      }\r\n\r\n      sampleSize = sampleSize || null;\r\n      totalWeight = totalWeight || null;\r\n      averageWeight = averageWeight || null;\r\n      totalLong = totalLong || null;\r\n      averageLong = averageLong || null;\r\n\r\n      return {\r\n        id: data.id,\r\n        date: dayjs(data.date),\r\n        measurements: data.measurements,\r\n        sampleSize,\r\n        samplePercentage: null,\r\n        totalWeight,\r\n        averageWeight,\r\n        totalLong,\r\n        averageLong,\r\n        population: null,\r\n        biomass: { value: null, unit: 'g' },\r\n        createdAt: dayjs(data.createdAt),\r\n        updatedAt: dayjs(data.updatedAt),\r\n        createIsSameUpdate: dayjs(data.createdAt).isSame(dayjs(data.updatedAt)),\r\n        setPopulation(population) {\r\n          this.population = population;\r\n          this.biomass.value = population * this.averageWeight;\r\n          if (this.biomass.value >= 1000) {\r\n            this.biomass.value = this.biomass.value / 1000;\r\n            this.biomass.unit = 'Kg.'\r\n          }\r\n          this.samplePercentage = _.round((this.sampleSize / population) * 100, 1);\r\n        }\r\n      }\r\n    },\r\n    // *===============================================*\r\n    // *================= MUTACIONES ==================*\r\n    // *===============================================*\r\n    /**\r\n     * Se encarga de crear las instancias de los lotes y agregarlos en el arreglo principal\r\n     * @param {*} data Objetos con los datos de un lote de peces\r\n     */\r\n    addNewFishBatch(data) {\r\n      console.log(data);\r\n      //Se crea la instancia\r\n      let fishBatch = this.createFishBatch(data);\r\n      //Se agrega al arreglo principal\r\n      this.allFishBatchs.push(fishBatch);\r\n      //Se actualiza el listado\r\n      this.updateFishBatchList();\r\n      this.formActive = false;\r\n    },\r\n    updateFishBatch(data) {\r\n      //Se crea una nueva instancia\r\n      let fishBatchUpdated = this.createFishBatch(data);\r\n      //Se recupera la antigua instnacia\r\n      let lastFishBatch = this.allFishBatchs.find(item => item.id === fishBatchUpdated.id);\r\n      //Se actualizan todos los campos\r\n      for (const key in fishBatchUpdated) {\r\n        if (Object.hasOwnProperty.call(fishBatchUpdated, key)) {\r\n          lastFishBatch[key] = fishBatchUpdated[key];\r\n        }\r\n      }\r\n\r\n      //Se actualiza el listado\r\n      this.updateFishBatchList();\r\n      this.formActive = false;\r\n    },\r\n    addObservation(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(batch => batch.id === detail.fishBatch.id);\r\n      //Se crea la observación\r\n      let observation = this.createObservation(detail.observation);\r\n      //Se agrega al listado\r\n      fishBatch.observations.push(observation);\r\n      this.dispatch('observation-was-added');\r\n      //Se deshabilita el formulario\r\n      this.formActive = false;\r\n    },\r\n    updateObservation(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(batch => batch.id === detail.fishBatch.id);\r\n      //Se crea la observación\r\n      let observation = this.createObservation(detail.observation);\r\n      //Se busca la observación original\r\n      let original = fishBatch.observations.find(item => item.id === observation.id);\r\n      //Se actualizan los campos\r\n      for (const key in observation) {\r\n        if (Object.hasOwnProperty.call(original, key)) {\r\n          original[key] = observation[key];\r\n        }\r\n      }\r\n\r\n      //Se deshabilita el formulario\r\n      this.formActive = false;\r\n    },\r\n    addExpense(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Se crea la instancia del gasto\r\n      let expense = this.createExpense(detail.expense);\r\n      //Se agrega al listado\r\n      fishBatch.expenses.push(expense);\r\n      //Se actualiza los importes\r\n      this.__updateMonetaryParameters(fishBatch);\r\n      this.dispatch('expense-was-added');\r\n      //Se deshabilita el formulario\r\n      this.formActive = false;\r\n    },\r\n    updateExpense(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Se crea la instancia del gasto\r\n      let expense = this.createExpense(detail.expense);\r\n      //Se recupera el gasto original\r\n      let original = fishBatch.expenses.find(item => item.id === expense.id);\r\n      //Se actualiza el original\r\n      for (const key in expense) {\r\n        if (Object.hasOwnProperty.call(original, key)) {\r\n          original[key] = expense[key];\r\n        }\r\n      }\r\n\r\n      //Se actualizan los parametros monetarios\r\n      this.__updateMonetaryParameters(fishBatch);\r\n      //Se emite el evento de que el gasto fue agregado\r\n      this.dispatch('expense-was-added');\r\n      //Se deshabilita el formulario\r\n      this.formActive = false;\r\n    },\r\n    removeExpense(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Se recupera el indice del gasto\r\n      let index = fishBatch.expenses.findIndex(item => item.id === detail.expense.id);\r\n      //Se elimina el estanque del arreglo\r\n      if (index >= 0) {\r\n        //Se elimina la instancia\r\n        fishBatch.expenses.splice(index, 1);\r\n        this.__updateMonetaryParameters(fishBatch);\r\n        this.dispatch('expense-was-removed');\r\n      }\r\n    },\r\n    addDeathReport(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Se crea el reporte de muertes\r\n      let report = this.createDeathReport(detail.death);\r\n      //Se guarda el reporte\r\n      fishBatch.deathReports.push(report);\r\n      //Se diminuye la población\r\n      fishBatch.population -= report.deaths;\r\n      //Se actualizna los parametros\r\n      this.__updateAllParameters(fishBatch, true);\r\n\r\n      this.formActive = false;\r\n    },\r\n    updateDeathReport(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Se crea el reporte de muertes\r\n      let report = this.createDeathReport(detail.death);\r\n      //Recupero el reporte original\r\n      let original = fishBatch.deathReports.find(item => item.id === report.id);\r\n\r\n      //Se actualizan las poblaciones\r\n      fishBatch.population += original.deaths - report.deaths;\r\n\r\n      //Se actualiza el reporte \r\n      for (const key in report) {\r\n        if (Object.hasOwnProperty.call(original, key)) {\r\n          original[key] = report[key];\r\n        }\r\n      }\r\n\r\n      //Se actualizna los parametros\r\n      this.__updateAllParameters(fishBatch, true);\r\n\r\n      this.formActive = false;\r\n    },\r\n    removeDeathReport(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Actualizo la población\r\n      fishBatch.population += detail.report.deaths;\r\n      //Se recupera el indice del reporte\r\n      let index = fishBatch.deathReports.findIndex(item => item.id === detail.report.id);\r\n\r\n      if (index >= 0) {\r\n        //Se elimina la instancia\r\n        fishBatch.deathReports.splice(index, 1);\r\n        this.__updateAllParameters(fishBatch, true);\r\n      }\r\n    },\r\n    addBiometry(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Se crea la instancia de la biometría\r\n      let biometry = this.createBiometry(detail.biometry);\r\n      //Se adiciona al listado\r\n      fishBatch.biometries.push(biometry);\r\n      //Se ordena el arreglo\r\n      fishBatch.biometries.sort(sortByDate);\r\n      //Se actualizna los parametros\r\n      this.__updateAllParameters(fishBatch, true);\r\n\r\n      this.formActive = false;\r\n    },\r\n    updateBiometry(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Se crea la instancia de la biometría\r\n      let biometry = this.createBiometry(detail.biometry);\r\n      //recupero la original\r\n      let original = fishBatch.biometries.find(item => item.id === biometry.id);\r\n      //Se actualiza la original\r\n      for (const key in biometry) {\r\n        if (Object.hasOwnProperty.call(original, key)) {\r\n          original[key] = biometry[key];\r\n        }\r\n      }\r\n\r\n      //Se ordena el arreglo\r\n      fishBatch.biometries.sort(sortByDate);\r\n\r\n      //Se actualizna los parametros\r\n      this.__updateAllParameters(fishBatch, true);\r\n\r\n      this.formActive = false;\r\n    },\r\n    removeBiometry(detail) {\r\n      //Recupero el lote de peces\r\n      let fishBatch = this.allFishBatchs.find(item => item.id === detail.fishBatch.id);\r\n      //Recupero el indice de la biometría\r\n      let index = fishBatch.biometries.findIndex(item => item.id === detail.biometry.id);\r\n\r\n      if (index >= 0) {\r\n        //Se elimina la instancia\r\n        fishBatch.biometries.splice(index, 1);\r\n        this.__updateAllParameters(fishBatch, true);\r\n      }\r\n    },\r\n    // *===============================================*\r\n    // *================= UTILIDADES ==================*\r\n    // *===============================================*\r\n    /**\r\n     * Se encarga de actualizar los parametros monetarios del lote\r\n     * teniendo en cuanta el costo inicial de los alevinos, todos \r\n     * los gastos financieros y el valor de las dosificaciones.\r\n     * @param {*} fishBatch Instancia del lote a actualizar\r\n     */\r\n    __updateMonetaryParameters(fishBatch) {\r\n      let initialCost = fishBatch.amount;\r\n      let expenses = fishBatch.expenses.reduce((amount, expense) => amount + expense.amount, 0);\r\n      let totalAmount = initialCost + expenses;\r\n      let unitPrice = _.round(totalAmount / fishBatch.population, 0);\r\n      let weight = fishBatch.biomass ? fishBatch.averageWeight * fishBatch.population : null;\r\n      let price = null;\r\n\r\n      if (weight) {\r\n        weight = weight / 1000;\r\n        price = _.round(totalAmount / weight, 0);\r\n      }\r\n\r\n      //Se actualiza el objeto\r\n      fishBatch.expenseAmount = expenses;\r\n      fishBatch.totalAmount = totalAmount;\r\n      fishBatch.unitPrice = unitPrice;\r\n      fishBatch.price = price;\r\n    },\r\n    /**\r\n     * Se encarga de actualizar los parametros referentes a la\r\n     * biomasa del lote y su evolución con respecto a todas las biometrías\r\n     * realizadas en campo. ademas completa los reportes de muertes y las biometrías.\r\n     * @param {*} fishBatch Instancia del lote a actualizar\r\n     */\r\n    __updateBiomassParameters(fishBatch) {\r\n      let initialBiomass = { value: null, unit: 'g.' }\r\n      let biomass = { value: null, unit: 'g.' }\r\n      let averageWeight = fishBatch.averageWeight;\r\n\r\n      initialBiomass.value = fishBatch.initialPopulation * fishBatch.initialWeight;\r\n      if (initialBiomass.value >= 1000) {\r\n        initialBiomass.value = _.round(initialBiomass.value / 1000, 2);\r\n        initialBiomass.unit = 'Kg.'\r\n      }\r\n\r\n      biomass.value = averageWeight * fishBatch.population;\r\n      if (biomass.value >= 1000) {\r\n        biomass.value = _.round(biomass.value / 1000, 2);\r\n        biomass.unit = 'Kg.'\r\n      }\r\n\r\n      fishBatch.averageWeight = averageWeight;\r\n      fishBatch.initialBiomass = initialBiomass;\r\n      fishBatch.biomass = biomass;\r\n\r\n      //Se actualizan las\r\n\r\n    },\r\n    /**\r\n     * Se encarga de completar o actualizar los reportes de las muertes agregando\r\n     * el valor de la población a cada instnacia y de recuperar de paso \r\n     * el ultimo valor medido del peso promedio.\r\n     * @param {*} fishBatch Instancia del lote a actualizar\r\n     */\r\n    __updateBiometriesAndDeaths(fishBatch) {\r\n      let population = fishBatch.initialPopulation;\r\n      let totalDeaths = 0;\r\n      let mortality = 0;\r\n      let averageWeight = fishBatch.initialWeight;\r\n      let indexBiometry = 0;\r\n      let biometry = null;\r\n\r\n      /** \r\n       * Se recorren todas las muertes para ir actualizando el numero de la población\r\n       * y mientras esto ocurre se van actualizando todas las biometrías que sean anterior a \r\n       * los reportes de muertes.\r\n       */\r\n      fishBatch.deathReports.forEach(report => {\r\n        //Se actualizan variables globales\r\n        totalDeaths += report.deaths;\r\n        mortality = _.round((totalDeaths / fishBatch.initialPopulation) * 100, 2);\r\n        //Se actualiza el reporte\r\n        report.setPopulation(population);\r\n        report.globalMortality = mortality;\r\n        report.totalDeaths = totalDeaths;\r\n\r\n        if (indexBiometry < fishBatch.biometries.length) {\r\n          biometry = fishBatch.biometries[indexBiometry];\r\n          while (biometry.date.isBefore(report.createdAt)) {\r\n            //Se actualizan los parametros de la biometría\r\n            biometry.setPopulation(population);\r\n            //Se recupera el peso promedio\r\n            averageWeight = biometry.averageWeight;\r\n            //Se incrementa el index\r\n            indexBiometry++;\r\n            //Se verifica nuevmente que existan datos\r\n            if (indexBiometry < fishBatch.biometries.length) {\r\n              //Se refresca la istancia\r\n              biometry = fishBatch.biometries[indexBiometry];\r\n            } else {\r\n              break;\r\n            }\r\n          }//.end while\r\n        }//.end if\r\n\r\n        //Se disminuye la población\r\n        population -= report.deaths;\r\n      });\r\n\r\n      //Finalmente se actualizan las biometrías falstantes\r\n      for (let index = indexBiometry; index < fishBatch.biometries.length; index++) {\r\n        let biometry = fishBatch.biometries[index];\r\n        //Se actualizan los parametros de la biometría\r\n        biometry.setPopulation(population);\r\n        //Se recupera el peso promedio\r\n        averageWeight = biometry.averageWeight;\r\n      }\r\n\r\n      fishBatch.averageWeight = averageWeight;\r\n    },\r\n    __updateAllParameters(fishBatch, emitEvent = false) {\r\n      this.__updateBiometriesAndDeaths(fishBatch);\r\n      this.__updateBiomassParameters(fishBatch);\r\n      this.__updateMonetaryParameters(fishBatch);\r\n\r\n      if (emitEvent) {\r\n        this.dispatch('fish-batch-was-updated')\r\n      }\r\n    },\r\n    __printSubmitData(data) {\r\n      let bodyLength = 60;\r\n      let separator = '-';\r\n      let header = '';\r\n      let left = `+${separator}`;\r\n      let right = `${separator}+`;\r\n      let text = '';\r\n\r\n      header = left + separator.repeat(bodyLength) + right + '\\n';\r\n      text = header;\r\n\r\n      for (const key in data) {\r\n        if (Object.hasOwnProperty.call(data, key)) {\r\n          let value = data[key] ? data[key].toString() : 'null';\r\n          let keyLength = key.length;\r\n          let valueLength = value.length;\r\n          let line = `${key}: ${value}`;\r\n          line += ' '.repeat(bodyLength - line.length);\r\n          text += `| ${line} |\\n`;\r\n        }//end if\r\n      }//end for\r\n      text += header;\r\n      console.log(text, data);\r\n    },\r\n  }\r\n}\r\n\r\nrequire('./fish-batch-form');\r\nrequire('./fish-batch-component');\r\nrequire('./fish-batch-observation-form');\r\nrequire('./fish-batch-expense-form');\r\nrequire('./fish-batch-death-form');\r\nrequire('./fish-batch-biometry-form');"],"sourceRoot":""}